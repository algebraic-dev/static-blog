{"version":3,"sources":["webpack://gatsby-starter-default/./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack://gatsby-starter-default/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://gatsby-starter-default/./node_modules/@babel/runtime/helpers/construct.js","webpack://gatsby-starter-default/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://gatsby-starter-default/./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","webpack://gatsby-starter-default/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://gatsby-starter-default/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://gatsby-starter-default/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://gatsby-starter-default/./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack://gatsby-starter-default/./node_modules/prismjs/components/prism-haskell.js","webpack://gatsby-starter-default/./node_modules/prismjs/prism.js","webpack://gatsby-starter-default/./src/templates/styles.tsx","webpack://gatsby-starter-default/./node_modules/@babel/runtime/helpers/esm/inherits.js","webpack://gatsby-starter-default/./node_modules/prism-react-renderer/prism/index.js","webpack://gatsby-starter-default/./node_modules/prism-react-renderer/dist/index.js","webpack://gatsby-starter-default/./node_modules/prism-react-renderer/themes/duotoneDark/index.js","webpack://gatsby-starter-default/./src/templates/highlight.js","webpack://gatsby-starter-default/./src/templates/post.tsx","webpack://gatsby-starter-default/./node_modules/gatsby-plugin-mdx/index.js","webpack://gatsby-starter-default/./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack://gatsby-starter-default/./src/templates/idris.js"],"names":["module","exports","arr","len","length","i","arr2","Array","__esModule","arrayLikeToArray","isArray","setPrototypeOf","isNativeReflectConstruct","_construct","Parent","args","Class","Reflect","construct","a","push","apply","instance","Function","bind","prototype","arguments","obj","key","value","Object","defineProperty","enumerable","configurable","writable","sham","Proxy","Boolean","valueOf","call","e","iter","Symbol","iterator","from","TypeError","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","o","minLen","n","toString","slice","constructor","name","test","Prism","languages","haskell","pattern","lookbehind","alias","greedy","inside","hs","_self","lang","uniqueId","plainTextGrammar","_","manual","disableWorkerMessageHandler","util","encode","tokens","Token","type","content","map","replace","objId","clone","deepClone","visited","id","hasOwnProperty","forEach","v","getLanguage","element","className","parentElement","match","toLowerCase","currentScript","document","Error","err","src","exec","stack","scripts","getElementsByTagName","isActive","defaultActivation","no","classList","contains","plain","plaintext","text","txt","extend","redef","insertBefore","before","insert","root","grammar","ret","token","newToken","old","DFS","this","callback","property","propertyType","plugins","highlightAll","async","highlightAllUnder","container","env","selector","hooks","run","elements","querySelectorAll","highlightElement","language","parent","nodeName","code","textContent","insertHighlightedCode","highlightedCode","innerHTML","hasAttribute","setAttribute","Worker","worker","filename","onmessage","evt","data","postMessage","JSON","stringify","immediateClose","highlight","tokenize","rest","tokenList","LinkedList","addAfter","head","matchGrammar","list","array","node","next","tail","toArray","all","add","callbacks","matchedStr","matchPattern","pos","lastIndex","lookbehindLength","index","startNode","startPos","rematch","patterns","j","cause","patternObj","global","flags","RegExp","source","currentNode","reach","str","removeCount","to","p","k","matchStr","after","removeFrom","prev","removeRange","nestedRematch","newNode","count","s","tag","classes","attributes","aliases","join","addEventListener","message","parse","close","script","highlightAutomaticallyCallback","readyState","defer","window","requestAnimationFrame","setTimeout","WorkerGlobalScope","self","g","markup","tagName","includedCdataInside","def","attrName","html","mathml","svg","xml","ssml","atom","rss","string","css","addInlined","addAttribute","clike","javascript","regex","js","Element","matches","msMatchesSelector","webkitMatchesSelector","EXTENSIONS","STATUS_ATTR","STATUS_LOADING","STATUS_LOADED","SELECTOR","pre","appendChild","createElement","getAttribute","extension","setLanguageClass","autoloader","loadLanguages","xhr","XMLHttpRequest","open","onreadystatechange","status","responseText","statusText","send","fileHighlight","logged","console","warn","trim","Wrapper","styled","MarkdownTheme","Title","_inherits","subClass","superClass","create","strarr","oneshot","target","delNum","wrapped","splice","keys","envVars","commandAfterHeredoc","insideString","bash","variable","toBeCopied","shell","c","keyword","cpp","selectorInside","unit","number","jsx","stringifyToken","walkTokens","openedTags","notTagNorBrace","pop","openedBraces","plainText","withId","unshift","maybeClassNameTokens","comment","interpolation","coffeescript","coffee","diff","PREFIXES","prefix","git","go","graphql","markdown","getPlaceholder","toUpperCase","defineProperties","buildPlaceholders","placeholderPattern","replaceFilter","tokenStack","placeholder","indexOf","tokenizePlaceholders","t","substring","middle","replacement","concat","handlebars","punctuation","json","webmanifest","less","makefile","inner","createInline","tableCell","tableRow","tableLine","yaml","l","codeLang","codeBlock","cls","Date","Math","floor","random","ele","getElementById","md","objectivec","objc","ocaml","python","py","reason","function","sass","atrule","operator","important","scss","sql","stylus","func","typescript","typeInside","ts","tsx","wasm","anchorOrAlias","properties","plainKey","createValuePattern","yml","defaultProps","theme","backgroundColor","color","styles","types","style","opacity","textDecorationLine","fontStyle","fontWeight","_defineProperty","_extends","assign","newlineRe","normalizeEmptyLines","line","empty","appendTypes","typesSize","themeToDict","base","themeDict","reduce","acc","themeEntry","includes","accStyle","objectWithoutProperties","exclude","Component","Highlight","this$1","props","undefined","prevTheme","prevLanguage","ref","output","getThemeDict","display","baseStyle","typeStyles","children","getStyleForToken","__proto__","render","typeArrStack","tokenArrStack","tokenArrIndexStack","tokenArrSizeStack","stackIndex","currentLine","splitByNewlines","split","newlineCount","i$1","normalizeTokens","getLineProps","getTokenProps","require","groups","WrapProvider","MDXProvider","components","background","mobileBackground","shadow","fontColor","title","mdx","frontmatter","marginBottom","Navbar","MDXRenderer","body","React","useMDXScope","scope","mdxScope","End","fullScope","values","fn","idris","builtin","idr"],"mappings":"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","file":"component---src-templates-post-tsx-b8d181a6d580c73bf4e2.js","sourcesContent":["function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct.js\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","Prism.languages.haskell = {\n  'comment': {\n    pattern: /(^|[^-!#$%*+=?&@|~.:<>^\\\\\\/])(?:--(?:(?=.)[^-!#$%*+=?&@|~.:<>^\\\\\\/].*|$)|\\{-[\\s\\S]*?-\\})/m,\n    lookbehind: true\n  },\n  'char': {\n    pattern: /'(?:[^\\\\']|\\\\(?:[abfnrtv\\\\\"'&]|\\^[A-Z@[\\]^_]|NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS|US|SP|DEL|\\d+|o[0-7]+|x[0-9a-fA-F]+))'/,\n    alias: 'string'\n  },\n  'string': {\n    pattern: /\"(?:[^\\\\\"]|\\\\(?:\\S|\\s+\\\\))*\"/,\n    greedy: true\n  },\n  'keyword': /\\b(?:case|class|data|deriving|do|else|if|in|infixl|infixr|instance|let|module|newtype|of|primitive|then|type|where)\\b/,\n  'import-statement': {\n    // The imported or hidden names are not included in this import\n    // statement. This is because we want to highlight those exactly like\n    // we do for the names in the program.\n    pattern: /(^[\\t ]*)import\\s+(?:qualified\\s+)?(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*(?:\\s+as\\s+(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*)?(?:\\s+hiding\\b)?/m,\n    lookbehind: true,\n    inside: {\n      'keyword': /\\b(?:import|qualified|as|hiding)\\b/\n    }\n  },\n  // These are builtin variables only. Constructors are highlighted later as a constant.\n  'builtin': /\\b(?:abs|acos|acosh|all|and|any|appendFile|approxRational|asTypeOf|asin|asinh|atan|atan2|atanh|basicIORun|break|catch|ceiling|chr|compare|concat|concatMap|const|cos|cosh|curry|cycle|decodeFloat|denominator|digitToInt|div|divMod|drop|dropWhile|either|elem|encodeFloat|enumFrom|enumFromThen|enumFromThenTo|enumFromTo|error|even|exp|exponent|fail|filter|flip|floatDigits|floatRadix|floatRange|floor|fmap|foldl|foldl1|foldr|foldr1|fromDouble|fromEnum|fromInt|fromInteger|fromIntegral|fromRational|fst|gcd|getChar|getContents|getLine|group|head|id|inRange|index|init|intToDigit|interact|ioError|isAlpha|isAlphaNum|isAscii|isControl|isDenormalized|isDigit|isHexDigit|isIEEE|isInfinite|isLower|isNaN|isNegativeZero|isOctDigit|isPrint|isSpace|isUpper|iterate|last|lcm|length|lex|lexDigits|lexLitChar|lines|log|logBase|lookup|map|mapM|mapM_|max|maxBound|maximum|maybe|min|minBound|minimum|mod|negate|not|notElem|null|numerator|odd|or|ord|otherwise|pack|pi|pred|primExitWith|print|product|properFraction|putChar|putStr|putStrLn|quot|quotRem|range|rangeSize|read|readDec|readFile|readFloat|readHex|readIO|readInt|readList|readLitChar|readLn|readOct|readParen|readSigned|reads|readsPrec|realToFrac|recip|rem|repeat|replicate|return|reverse|round|scaleFloat|scanl|scanl1|scanr|scanr1|seq|sequence|sequence_|show|showChar|showInt|showList|showLitChar|showParen|showSigned|showString|shows|showsPrec|significand|signum|sin|sinh|snd|sort|span|splitAt|sqrt|subtract|succ|sum|tail|take|takeWhile|tan|tanh|threadToIOResult|toEnum|toInt|toInteger|toLower|toRational|toUpper|truncate|uncurry|undefined|unlines|until|unwords|unzip|unzip3|userError|words|writeFile|zip|zip3|zipWith|zipWith3)\\b/,\n  // decimal integers and floating point numbers | octal integers | hexadecimal integers\n  'number': /\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0o[0-7]+|0x[0-9a-f]+)\\b/i,\n  // Most of this is needed because of the meaning of a single '.'.\n  // If it stands alone freely, it is the function composition.\n  // It may also be a separator between a module name and an identifier => no\n  // operator. If it comes together with other special characters it is an\n  // operator too.\n  'operator': /\\s\\.\\s|[-!#$%*+=?&@|~:<>^\\\\\\/]*\\.[-!#$%*+=?&@|~.:<>^\\\\\\/]+|[-!#$%*+=?&@|~.:<>^\\\\\\/]+\\.[-!#$%*+=?&@|~:<>^\\\\\\/]*|[-!#$%*+=?&@|~:<>^\\\\\\/]+|`(?:[A-Z][\\w']*\\.)*[_a-z][\\w']*`/,\n  // In Haskell, nearly everything is a variable, do not highlight these.\n  'hvariable': /\\b(?:[A-Z][\\w']*\\.)*[_a-z][\\w']*\\b/,\n  'constant': /\\b(?:[A-Z][\\w']*\\.)*[A-Z][\\w']*\\b/,\n  'punctuation': /[{}[\\];(),.:]/\n};\nPrism.languages.hs = Prism.languages.haskell;","/* **********************************************\n     Begin prism-core.js\n********************************************** */\n/// <reference lib=\"WebWorker\"/>\nvar _self = typeof window !== 'undefined' ? window // if in browser\n: typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope ? self // if in worker\n: {} // if in node js\n;\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\n\n\nvar Prism = function (_self) {\n  // Private helper vars\n  var lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\n  var uniqueId = 0; // The grammar object for plaintext\n\n  var plainTextGrammar = {};\n  var _ = {\n    /**\n     * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the\n     * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load\n     * additional languages or plugins yourself.\n     *\n     * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.\n     *\n     * You obviously have to change this value before the automatic highlighting started. To do this, you can add an\n     * empty Prism object into the global scope before loading the Prism script like this:\n     *\n     * ```js\n     * window.Prism = window.Prism || {};\n     * Prism.manual = true;\n     * // add a new <script> to load Prism's script\n     * ```\n     *\n     * @default false\n     * @type {boolean}\n     * @memberof Prism\n     * @public\n     */\n    manual: _self.Prism && _self.Prism.manual,\n    disableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\n    /**\n     * A namespace for utility methods.\n     *\n     * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n     * change or disappear at any time.\n     *\n     * @namespace\n     * @memberof Prism\n     */\n    util: {\n      encode: function encode(tokens) {\n        if (tokens instanceof Token) {\n          return new Token(tokens.type, encode(tokens.content), tokens.alias);\n        } else if (Array.isArray(tokens)) {\n          return tokens.map(encode);\n        } else {\n          return tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n        }\n      },\n\n      /**\n       * Returns the name of the type of the given value.\n       *\n       * @param {any} o\n       * @returns {string}\n       * @example\n       * type(null)      === 'Null'\n       * type(undefined) === 'Undefined'\n       * type(123)       === 'Number'\n       * type('foo')     === 'String'\n       * type(true)      === 'Boolean'\n       * type([1, 2])    === 'Array'\n       * type({})        === 'Object'\n       * type(String)    === 'Function'\n       * type(/abc+/)    === 'RegExp'\n       */\n      type: function type(o) {\n        return Object.prototype.toString.call(o).slice(8, -1);\n      },\n\n      /**\n       * Returns a unique number for the given object. Later calls will still return the same number.\n       *\n       * @param {Object} obj\n       * @returns {number}\n       */\n      objId: function objId(obj) {\n        if (!obj['__id']) {\n          Object.defineProperty(obj, '__id', {\n            value: ++uniqueId\n          });\n        }\n\n        return obj['__id'];\n      },\n\n      /**\n       * Creates a deep clone of the given object.\n       *\n       * The main intended use of this function is to clone language definitions.\n       *\n       * @param {T} o\n       * @param {Record<number, any>} [visited]\n       * @returns {T}\n       * @template T\n       */\n      clone: function deepClone(o, visited) {\n        visited = visited || {};\n        var clone;\n        var id;\n\n        switch (_.util.type(o)) {\n          case 'Object':\n            id = _.util.objId(o);\n\n            if (visited[id]) {\n              return visited[id];\n            }\n\n            clone =\n            /** @type {Record<string, any>} */\n            {};\n            visited[id] = clone;\n\n            for (var key in o) {\n              if (o.hasOwnProperty(key)) {\n                clone[key] = deepClone(o[key], visited);\n              }\n            }\n\n            return (\n              /** @type {any} */\n              clone\n            );\n\n          case 'Array':\n            id = _.util.objId(o);\n\n            if (visited[id]) {\n              return visited[id];\n            }\n\n            clone = [];\n            visited[id] = clone;\n\n            /** @type {Array} */\n\n            /** @type {any} */\n            o.forEach(function (v, i) {\n              clone[i] = deepClone(v, visited);\n            });\n            return (\n              /** @type {any} */\n              clone\n            );\n\n          default:\n            return o;\n        }\n      },\n\n      /**\n       * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n       *\n       * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n       *\n       * @param {Element} element\n       * @returns {string}\n       */\n      getLanguage: function getLanguage(element) {\n        while (element && !lang.test(element.className)) {\n          element = element.parentElement;\n        }\n\n        if (element) {\n          return (element.className.match(lang) || [, 'none'])[1].toLowerCase();\n        }\n\n        return 'none';\n      },\n\n      /**\n       * Returns the script element that is currently executing.\n       *\n       * This does __not__ work for line script element.\n       *\n       * @returns {HTMLScriptElement | null}\n       */\n      currentScript: function currentScript() {\n        if (typeof document === 'undefined') {\n          return null;\n        }\n\n        if ('currentScript' in document && 1 < 2\n        /* hack to trip TS' flow analysis */\n        ) {\n            return (\n              /** @type {any} */\n              document.currentScript\n            );\n          } // IE11 workaround\n        // we'll get the src of the current script by parsing IE11's error stack trace\n        // this will not work for inline scripts\n\n\n        try {\n          throw new Error();\n        } catch (err) {\n          // Get file src url from stack. Specifically works with the format of stack traces in IE.\n          // A stack will look like this:\n          //\n          // Error\n          //    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n          //    at Global code (http://localhost/components/prism-core.js:606:1)\n          var src = (/at [^(\\r\\n]*\\((.*):.+:.+\\)$/i.exec(err.stack) || [])[1];\n\n          if (src) {\n            var scripts = document.getElementsByTagName('script');\n\n            for (var i in scripts) {\n              if (scripts[i].src == src) {\n                return scripts[i];\n              }\n            }\n          }\n\n          return null;\n        }\n      },\n\n      /**\n       * Returns whether a given class is active for `element`.\n       *\n       * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n       * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n       * given class is just the given class with a `no-` prefix.\n       *\n       * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n       * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n       * ancestors have the given class or the negated version of it, then the default activation will be returned.\n       *\n       * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n       * version of it, the class is considered active.\n       *\n       * @param {Element} element\n       * @param {string} className\n       * @param {boolean} [defaultActivation=false]\n       * @returns {boolean}\n       */\n      isActive: function isActive(element, className, defaultActivation) {\n        var no = 'no-' + className;\n\n        while (element) {\n          var classList = element.classList;\n\n          if (classList.contains(className)) {\n            return true;\n          }\n\n          if (classList.contains(no)) {\n            return false;\n          }\n\n          element = element.parentElement;\n        }\n\n        return !!defaultActivation;\n      }\n    },\n\n    /**\n     * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n     *\n     * @namespace\n     * @memberof Prism\n     * @public\n     */\n    languages: {\n      /**\n       * The grammar for plain, unformatted text.\n       */\n      plain: plainTextGrammar,\n      plaintext: plainTextGrammar,\n      text: plainTextGrammar,\n      txt: plainTextGrammar,\n\n      /**\n       * Creates a deep copy of the language with the given id and appends the given tokens.\n       *\n       * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n       * will be overwritten at its original position.\n       *\n       * ## Best practices\n       *\n       * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n       * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n       * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n       *\n       * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n       * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n       *\n       * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n       * @param {Grammar} redef The new tokens to append.\n       * @returns {Grammar} The new language created.\n       * @public\n       * @example\n       * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n       *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n       *     // at its original position\n       *     'comment': { ... },\n       *     // CSS doesn't have a 'color' token, so this token will be appended\n       *     'color': /\\b(?:red|green|blue)\\b/\n       * });\n       */\n      extend: function extend(id, redef) {\n        var lang = _.util.clone(_.languages[id]);\n\n        for (var key in redef) {\n          lang[key] = redef[key];\n        }\n\n        return lang;\n      },\n\n      /**\n       * Inserts tokens _before_ another token in a language definition or any other grammar.\n       *\n       * ## Usage\n       *\n       * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n       * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n       * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n       * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n       * this:\n       *\n       * ```js\n       * Prism.languages.markup.style = {\n       *     // token\n       * };\n       * ```\n       *\n       * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n       * before existing tokens. For the CSS example above, you would use it like this:\n       *\n       * ```js\n       * Prism.languages.insertBefore('markup', 'cdata', {\n       *     'style': {\n       *         // token\n       *     }\n       * });\n       * ```\n       *\n       * ## Special cases\n       *\n       * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n       * will be ignored.\n       *\n       * This behavior can be used to insert tokens after `before`:\n       *\n       * ```js\n       * Prism.languages.insertBefore('markup', 'comment', {\n       *     'comment': Prism.languages.markup.comment,\n       *     // tokens after 'comment'\n       * });\n       * ```\n       *\n       * ## Limitations\n       *\n       * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n       * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n       * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n       * deleting properties which is necessary to insert at arbitrary positions.\n       *\n       * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n       * Instead, it will create a new object and replace all references to the target object with the new one. This\n       * can be done without temporarily deleting properties, so the iteration order is well-defined.\n       *\n       * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n       * you hold the target object in a variable, then the value of the variable will not change.\n       *\n       * ```js\n       * var oldMarkup = Prism.languages.markup;\n       * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n       *\n       * assert(oldMarkup !== Prism.languages.markup);\n       * assert(newMarkup === Prism.languages.markup);\n       * ```\n       *\n       * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n       * object to be modified.\n       * @param {string} before The key to insert before.\n       * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n       * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n       * object to be modified.\n       *\n       * Defaults to `Prism.languages`.\n       * @returns {Grammar} The new grammar object.\n       * @public\n       */\n      insertBefore: function insertBefore(inside, before, insert, root) {\n        root = root ||\n        /** @type {any} */\n        _.languages;\n        var grammar = root[inside];\n        /** @type {Grammar} */\n\n        var ret = {};\n\n        for (var token in grammar) {\n          if (grammar.hasOwnProperty(token)) {\n            if (token == before) {\n              for (var newToken in insert) {\n                if (insert.hasOwnProperty(newToken)) {\n                  ret[newToken] = insert[newToken];\n                }\n              }\n            } // Do not insert token which also occur in insert. See #1525\n\n\n            if (!insert.hasOwnProperty(token)) {\n              ret[token] = grammar[token];\n            }\n          }\n        }\n\n        var old = root[inside];\n        root[inside] = ret; // Update references in other language definitions\n\n        _.languages.DFS(_.languages, function (key, value) {\n          if (value === old && key != inside) {\n            this[key] = ret;\n          }\n        });\n\n        return ret;\n      },\n      // Traverse a language definition with Depth First Search\n      DFS: function DFS(o, callback, type, visited) {\n        visited = visited || {};\n        var objId = _.util.objId;\n\n        for (var i in o) {\n          if (o.hasOwnProperty(i)) {\n            callback.call(o, i, o[i], type || i);\n            var property = o[i];\n\n            var propertyType = _.util.type(property);\n\n            if (propertyType === 'Object' && !visited[objId(property)]) {\n              visited[objId(property)] = true;\n              DFS(property, callback, null, visited);\n            } else if (propertyType === 'Array' && !visited[objId(property)]) {\n              visited[objId(property)] = true;\n              DFS(property, callback, i, visited);\n            }\n          }\n        }\n      }\n    },\n    plugins: {},\n\n    /**\n     * This is the most high-level function in Prism’s API.\n     * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on\n     * each one of them.\n     *\n     * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.\n     *\n     * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.\n     * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.\n     * @memberof Prism\n     * @public\n     */\n    highlightAll: function highlightAll(async, callback) {\n      _.highlightAllUnder(document, async, callback);\n    },\n\n    /**\n     * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls\n     * {@link Prism.highlightElement} on each one of them.\n     *\n     * The following hooks will be run:\n     * 1. `before-highlightall`\n     * 2. `before-all-elements-highlight`\n     * 3. All hooks of {@link Prism.highlightElement} for each element.\n     *\n     * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.\n     * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.\n     * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.\n     * @memberof Prism\n     * @public\n     */\n    highlightAllUnder: function highlightAllUnder(container, async, callback) {\n      var env = {\n        callback: callback,\n        container: container,\n        selector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n      };\n\n      _.hooks.run('before-highlightall', env);\n\n      env.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n\n      _.hooks.run('before-all-elements-highlight', env);\n\n      for (var i = 0, element; element = env.elements[i++];) {\n        _.highlightElement(element, async === true, env.callback);\n      }\n    },\n\n    /**\n     * Highlights the code inside a single element.\n     *\n     * The following hooks will be run:\n     * 1. `before-sanity-check`\n     * 2. `before-highlight`\n     * 3. All hooks of {@link Prism.highlight}. These hooks will be run by an asynchronous worker if `async` is `true`.\n     * 4. `before-insert`\n     * 5. `after-highlight`\n     * 6. `complete`\n     *\n     * Some the above hooks will be skipped if the element doesn't contain any text or there is no grammar loaded for\n     * the element's language.\n     *\n     * @param {Element} element The element containing the code.\n     * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.\n     * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers\n     * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is\n     * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).\n     *\n     * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for\n     * asynchronous highlighting to work. You can build your own bundle on the\n     * [Download page](https://prismjs.com/download.html).\n     * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.\n     * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.\n     * @memberof Prism\n     * @public\n     */\n    highlightElement: function highlightElement(element, async, callback) {\n      // Find language\n      var language = _.util.getLanguage(element);\n\n      var grammar = _.languages[language]; // Set language on the element, if not present\n\n      element.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language; // Set language on the parent, for styling\n\n      var parent = element.parentElement;\n\n      if (parent && parent.nodeName.toLowerCase() === 'pre') {\n        parent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n      }\n\n      var code = element.textContent;\n      var env = {\n        element: element,\n        language: language,\n        grammar: grammar,\n        code: code\n      };\n\n      function insertHighlightedCode(highlightedCode) {\n        env.highlightedCode = highlightedCode;\n\n        _.hooks.run('before-insert', env);\n\n        env.element.innerHTML = env.highlightedCode;\n\n        _.hooks.run('after-highlight', env);\n\n        _.hooks.run('complete', env);\n\n        callback && callback.call(env.element);\n      }\n\n      _.hooks.run('before-sanity-check', env); // plugins may change/add the parent/element\n\n\n      parent = env.element.parentElement;\n\n      if (parent && parent.nodeName.toLowerCase() === 'pre' && !parent.hasAttribute('tabindex')) {\n        parent.setAttribute('tabindex', '0');\n      }\n\n      if (!env.code) {\n        _.hooks.run('complete', env);\n\n        callback && callback.call(env.element);\n        return;\n      }\n\n      _.hooks.run('before-highlight', env);\n\n      if (!env.grammar) {\n        insertHighlightedCode(_.util.encode(env.code));\n        return;\n      }\n\n      if (async && _self.Worker) {\n        var worker = new Worker(_.filename);\n\n        worker.onmessage = function (evt) {\n          insertHighlightedCode(evt.data);\n        };\n\n        worker.postMessage(JSON.stringify({\n          language: env.language,\n          code: env.code,\n          immediateClose: true\n        }));\n      } else {\n        insertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n      }\n    },\n\n    /**\n     * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n     * and the language definitions to use, and returns a string with the HTML produced.\n     *\n     * The following hooks will be run:\n     * 1. `before-tokenize`\n     * 2. `after-tokenize`\n     * 3. `wrap`: On each {@link Token}.\n     *\n     * @param {string} text A string with the code to be highlighted.\n     * @param {Grammar} grammar An object containing the tokens to use.\n     *\n     * Usually a language definition like `Prism.languages.markup`.\n     * @param {string} language The name of the language definition passed to `grammar`.\n     * @returns {string} The highlighted HTML.\n     * @memberof Prism\n     * @public\n     * @example\n     * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n     */\n    highlight: function highlight(text, grammar, language) {\n      var env = {\n        code: text,\n        grammar: grammar,\n        language: language\n      };\n\n      _.hooks.run('before-tokenize', env);\n\n      env.tokens = _.tokenize(env.code, env.grammar);\n\n      _.hooks.run('after-tokenize', env);\n\n      return Token.stringify(_.util.encode(env.tokens), env.language);\n    },\n\n    /**\n     * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n     * and the language definitions to use, and returns an array with the tokenized code.\n     *\n     * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n     *\n     * This method could be useful in other contexts as well, as a very crude parser.\n     *\n     * @param {string} text A string with the code to be highlighted.\n     * @param {Grammar} grammar An object containing the tokens to use.\n     *\n     * Usually a language definition like `Prism.languages.markup`.\n     * @returns {TokenStream} An array of strings and tokens, a token stream.\n     * @memberof Prism\n     * @public\n     * @example\n     * let code = `var foo = 0;`;\n     * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n     * tokens.forEach(token => {\n     *     if (token instanceof Prism.Token && token.type === 'number') {\n     *         console.log(`Found numeric literal: ${token.content}`);\n     *     }\n     * });\n     */\n    tokenize: function tokenize(text, grammar) {\n      var rest = grammar.rest;\n\n      if (rest) {\n        for (var token in rest) {\n          grammar[token] = rest[token];\n        }\n\n        delete grammar.rest;\n      }\n\n      var tokenList = new LinkedList();\n      addAfter(tokenList, tokenList.head, text);\n      matchGrammar(text, tokenList, grammar, tokenList.head, 0);\n      return toArray(tokenList);\n    },\n\n    /**\n     * @namespace\n     * @memberof Prism\n     * @public\n     */\n    hooks: {\n      all: {},\n\n      /**\n       * Adds the given callback to the list of callbacks for the given hook.\n       *\n       * The callback will be invoked when the hook it is registered for is run.\n       * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n       *\n       * One callback function can be registered to multiple hooks and the same hook multiple times.\n       *\n       * @param {string} name The name of the hook.\n       * @param {HookCallback} callback The callback function which is given environment variables.\n       * @public\n       */\n      add: function add(name, callback) {\n        var hooks = _.hooks.all;\n        hooks[name] = hooks[name] || [];\n        hooks[name].push(callback);\n      },\n\n      /**\n       * Runs a hook invoking all registered callbacks with the given environment variables.\n       *\n       * Callbacks will be invoked synchronously and in the order in which they were registered.\n       *\n       * @param {string} name The name of the hook.\n       * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n       * @public\n       */\n      run: function run(name, env) {\n        var callbacks = _.hooks.all[name];\n\n        if (!callbacks || !callbacks.length) {\n          return;\n        }\n\n        for (var i = 0, callback; callback = callbacks[i++];) {\n          callback(env);\n        }\n      }\n    },\n    Token: Token\n  };\n  _self.Prism = _; // Typescript note:\n  // The following can be used to import the Token type in JSDoc:\n  //\n  //   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n  /**\n   * Creates a new token.\n   *\n   * @param {string} type See {@link Token#type type}\n   * @param {string | TokenStream} content See {@link Token#content content}\n   * @param {string|string[]} [alias] The alias(es) of the token.\n   * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n   * @class\n   * @global\n   * @public\n   */\n\n  function Token(type, content, alias, matchedStr) {\n    /**\n     * The type of the token.\n     *\n     * This is usually the key of a pattern in a {@link Grammar}.\n     *\n     * @type {string}\n     * @see GrammarToken\n     * @public\n     */\n    this.type = type;\n    /**\n     * The strings or tokens contained by this token.\n     *\n     * This will be a token stream if the pattern matched also defined an `inside` grammar.\n     *\n     * @type {string | TokenStream}\n     * @public\n     */\n\n    this.content = content;\n    /**\n     * The alias(es) of the token.\n     *\n     * @type {string|string[]}\n     * @see GrammarToken\n     * @public\n     */\n\n    this.alias = alias; // Copy of the full string this token was created from\n\n    this.length = (matchedStr || '').length | 0;\n  }\n  /**\n   * A token stream is an array of strings and {@link Token Token} objects.\n   *\n   * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n   * them.\n   *\n   * 1. No adjacent strings.\n   * 2. No empty strings.\n   *\n   *    The only exception here is the token stream that only contains the empty string and nothing else.\n   *\n   * @typedef {Array<string | Token>} TokenStream\n   * @global\n   * @public\n   */\n\n  /**\n   * Converts the given token or token stream to an HTML representation.\n   *\n   * The following hooks will be run:\n   * 1. `wrap`: On each {@link Token}.\n   *\n   * @param {string | Token | TokenStream} o The token or token stream to be converted.\n   * @param {string} language The name of current language.\n   * @returns {string} The HTML representation of the token or token stream.\n   * @memberof Token\n   * @static\n   */\n\n\n  Token.stringify = function stringify(o, language) {\n    if (typeof o == 'string') {\n      return o;\n    }\n\n    if (Array.isArray(o)) {\n      var s = '';\n      o.forEach(function (e) {\n        s += stringify(e, language);\n      });\n      return s;\n    }\n\n    var env = {\n      type: o.type,\n      content: stringify(o.content, language),\n      tag: 'span',\n      classes: ['token', o.type],\n      attributes: {},\n      language: language\n    };\n    var aliases = o.alias;\n\n    if (aliases) {\n      if (Array.isArray(aliases)) {\n        Array.prototype.push.apply(env.classes, aliases);\n      } else {\n        env.classes.push(aliases);\n      }\n    }\n\n    _.hooks.run('wrap', env);\n\n    var attributes = '';\n\n    for (var name in env.attributes) {\n      attributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n    }\n\n    return '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n  };\n  /**\n   * @param {RegExp} pattern\n   * @param {number} pos\n   * @param {string} text\n   * @param {boolean} lookbehind\n   * @returns {RegExpExecArray | null}\n   */\n\n\n  function matchPattern(pattern, pos, text, lookbehind) {\n    pattern.lastIndex = pos;\n    var match = pattern.exec(text);\n\n    if (match && lookbehind && match[1]) {\n      // change the match to remove the text matched by the Prism lookbehind group\n      var lookbehindLength = match[1].length;\n      match.index += lookbehindLength;\n      match[0] = match[0].slice(lookbehindLength);\n    }\n\n    return match;\n  }\n  /**\n   * @param {string} text\n   * @param {LinkedList<string | Token>} tokenList\n   * @param {any} grammar\n   * @param {LinkedListNode<string | Token>} startNode\n   * @param {number} startPos\n   * @param {RematchOptions} [rematch]\n   * @returns {void}\n   * @private\n   *\n   * @typedef RematchOptions\n   * @property {string} cause\n   * @property {number} reach\n   */\n\n\n  function matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n    for (var token in grammar) {\n      if (!grammar.hasOwnProperty(token) || !grammar[token]) {\n        continue;\n      }\n\n      var patterns = grammar[token];\n      patterns = Array.isArray(patterns) ? patterns : [patterns];\n\n      for (var j = 0; j < patterns.length; ++j) {\n        if (rematch && rematch.cause == token + ',' + j) {\n          return;\n        }\n\n        var patternObj = patterns[j];\n        var inside = patternObj.inside;\n        var lookbehind = !!patternObj.lookbehind;\n        var greedy = !!patternObj.greedy;\n        var alias = patternObj.alias;\n\n        if (greedy && !patternObj.pattern.global) {\n          // Without the global flag, lastIndex won't work\n          var flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n          patternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n        }\n        /** @type {RegExp} */\n\n\n        var pattern = patternObj.pattern || patternObj;\n\n        for ( // iterate the token list and keep track of the current token/string position\n        var currentNode = startNode.next, pos = startPos; currentNode !== tokenList.tail; pos += currentNode.value.length, currentNode = currentNode.next) {\n          if (rematch && pos >= rematch.reach) {\n            break;\n          }\n\n          var str = currentNode.value;\n\n          if (tokenList.length > text.length) {\n            // Something went terribly wrong, ABORT, ABORT!\n            return;\n          }\n\n          if (str instanceof Token) {\n            continue;\n          }\n\n          var removeCount = 1; // this is the to parameter of removeBetween\n\n          var match;\n\n          if (greedy) {\n            match = matchPattern(pattern, pos, text, lookbehind);\n\n            if (!match) {\n              break;\n            }\n\n            var from = match.index;\n            var to = match.index + match[0].length;\n            var p = pos; // find the node that contains the match\n\n            p += currentNode.value.length;\n\n            while (from >= p) {\n              currentNode = currentNode.next;\n              p += currentNode.value.length;\n            } // adjust pos (and p)\n\n\n            p -= currentNode.value.length;\n            pos = p; // the current node is a Token, then the match starts inside another Token, which is invalid\n\n            if (currentNode.value instanceof Token) {\n              continue;\n            } // find the last node which is affected by this match\n\n\n            for (var k = currentNode; k !== tokenList.tail && (p < to || typeof k.value === 'string'); k = k.next) {\n              removeCount++;\n              p += k.value.length;\n            }\n\n            removeCount--; // replace with the new match\n\n            str = text.slice(pos, p);\n            match.index -= pos;\n          } else {\n            match = matchPattern(pattern, 0, str, lookbehind);\n\n            if (!match) {\n              continue;\n            }\n          } // eslint-disable-next-line no-redeclare\n\n\n          var from = match.index;\n          var matchStr = match[0];\n          var before = str.slice(0, from);\n          var after = str.slice(from + matchStr.length);\n          var reach = pos + str.length;\n\n          if (rematch && reach > rematch.reach) {\n            rematch.reach = reach;\n          }\n\n          var removeFrom = currentNode.prev;\n\n          if (before) {\n            removeFrom = addAfter(tokenList, removeFrom, before);\n            pos += before.length;\n          }\n\n          removeRange(tokenList, removeFrom, removeCount);\n          var wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n          currentNode = addAfter(tokenList, removeFrom, wrapped);\n\n          if (after) {\n            addAfter(tokenList, currentNode, after);\n          }\n\n          if (removeCount > 1) {\n            // at least one Token object was removed, so we have to do some rematching\n            // this can only happen if the current pattern is greedy\n\n            /** @type {RematchOptions} */\n            var nestedRematch = {\n              cause: token + ',' + j,\n              reach: reach\n            };\n            matchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch); // the reach might have been extended because of the rematching\n\n            if (rematch && nestedRematch.reach > rematch.reach) {\n              rematch.reach = nestedRematch.reach;\n            }\n          }\n        }\n      }\n    }\n  }\n  /**\n   * @typedef LinkedListNode\n   * @property {T} value\n   * @property {LinkedListNode<T> | null} prev The previous node.\n   * @property {LinkedListNode<T> | null} next The next node.\n   * @template T\n   * @private\n   */\n\n  /**\n   * @template T\n   * @private\n   */\n\n\n  function LinkedList() {\n    /** @type {LinkedListNode<T>} */\n    var head = {\n      value: null,\n      prev: null,\n      next: null\n    };\n    /** @type {LinkedListNode<T>} */\n\n    var tail = {\n      value: null,\n      prev: head,\n      next: null\n    };\n    head.next = tail;\n    /** @type {LinkedListNode<T>} */\n\n    this.head = head;\n    /** @type {LinkedListNode<T>} */\n\n    this.tail = tail;\n    this.length = 0;\n  }\n  /**\n   * Adds a new node with the given value to the list.\n   *\n   * @param {LinkedList<T>} list\n   * @param {LinkedListNode<T>} node\n   * @param {T} value\n   * @returns {LinkedListNode<T>} The added node.\n   * @template T\n   */\n\n\n  function addAfter(list, node, value) {\n    // assumes that node != list.tail && values.length >= 0\n    var next = node.next;\n    var newNode = {\n      value: value,\n      prev: node,\n      next: next\n    };\n    node.next = newNode;\n    next.prev = newNode;\n    list.length++;\n    return newNode;\n  }\n  /**\n   * Removes `count` nodes after the given node. The given node will not be removed.\n   *\n   * @param {LinkedList<T>} list\n   * @param {LinkedListNode<T>} node\n   * @param {number} count\n   * @template T\n   */\n\n\n  function removeRange(list, node, count) {\n    var next = node.next;\n\n    for (var i = 0; i < count && next !== list.tail; i++) {\n      next = next.next;\n    }\n\n    node.next = next;\n    next.prev = node;\n    list.length -= i;\n  }\n  /**\n   * @param {LinkedList<T>} list\n   * @returns {T[]}\n   * @template T\n   */\n\n\n  function toArray(list) {\n    var array = [];\n    var node = list.head.next;\n\n    while (node !== list.tail) {\n      array.push(node.value);\n      node = node.next;\n    }\n\n    return array;\n  }\n\n  if (!_self.document) {\n    if (!_self.addEventListener) {\n      // in Node.js\n      return _;\n    }\n\n    if (!_.disableWorkerMessageHandler) {\n      // In worker\n      _self.addEventListener('message', function (evt) {\n        var message = JSON.parse(evt.data);\n        var lang = message.language;\n        var code = message.code;\n        var immediateClose = message.immediateClose;\n\n        _self.postMessage(_.highlight(code, _.languages[lang], lang));\n\n        if (immediateClose) {\n          _self.close();\n        }\n      }, false);\n    }\n\n    return _;\n  } // Get current script and highlight\n\n\n  var script = _.util.currentScript();\n\n  if (script) {\n    _.filename = script.src;\n\n    if (script.hasAttribute('data-manual')) {\n      _.manual = true;\n    }\n  }\n\n  function highlightAutomaticallyCallback() {\n    if (!_.manual) {\n      _.highlightAll();\n    }\n  }\n\n  if (!_.manual) {\n    // If the document state is \"loading\", then we'll use DOMContentLoaded.\n    // If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n    // DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n    // might take longer one animation frame to execute which can create a race condition where only some plugins have\n    // been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n    // See https://github.com/PrismJS/prism/issues/2102\n    var readyState = document.readyState;\n\n    if (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n      document.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n    } else {\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(highlightAutomaticallyCallback);\n      } else {\n        window.setTimeout(highlightAutomaticallyCallback, 16);\n      }\n    }\n  }\n\n  return _;\n}(_self);\n\nif (typeof module !== 'undefined' && module.exports) {\n  module.exports = Prism;\n} // hack for components to work correctly in node.js\n\n\nif (typeof global !== 'undefined') {\n  global.Prism = Prism;\n} // some additional documentation/types\n\n/**\n * The expansion of a simple `RegExp` literal to support additional properties.\n *\n * @typedef GrammarToken\n * @property {RegExp} pattern The regular expression of the token.\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\n * @property {boolean} [greedy=false] Whether the token is greedy.\n * @property {string|string[]} [alias] An optional alias or list of aliases.\n * @property {Grammar} [inside] The nested grammar of this token.\n *\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\n *\n * This can be used to make nested and even recursive language definitions.\n *\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\n * each another.\n * @global\n * @public\n */\n\n/**\n * @typedef Grammar\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\n * @global\n * @public\n */\n\n/**\n * A function which will invoked after an element was successfully highlighted.\n *\n * @callback HighlightCallback\n * @param {Element} element The element successfully highlighted.\n * @returns {void}\n * @global\n * @public\n */\n\n/**\n * @callback HookCallback\n * @param {Object<string, any>} env The environment variables of the hook.\n * @returns {void}\n * @global\n * @public\n */\n\n/* **********************************************\n     Begin prism-markup.js\n********************************************** */\n\n\nPrism.languages.markup = {\n  'comment': /<!--[\\s\\S]*?-->/,\n  'prolog': /<\\?[\\s\\S]+?\\?>/,\n  'doctype': {\n    // https://www.w3.org/TR/xml/#NT-doctypedecl\n    pattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n    greedy: true,\n    inside: {\n      'internal-subset': {\n        pattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n        lookbehind: true,\n        greedy: true,\n        inside: null // see below\n\n      },\n      'string': {\n        pattern: /\"[^\"]*\"|'[^']*'/,\n        greedy: true\n      },\n      'punctuation': /^<!|>$|[[\\]]/,\n      'doctype-tag': /^DOCTYPE/,\n      'name': /[^\\s<>'\"]+/\n    }\n  },\n  'cdata': /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n  'tag': {\n    pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n    greedy: true,\n    inside: {\n      'tag': {\n        pattern: /^<\\/?[^\\s>\\/]+/,\n        inside: {\n          'punctuation': /^<\\/?/,\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      },\n      'special-attr': [],\n      'attr-value': {\n        pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n        inside: {\n          'punctuation': [{\n            pattern: /^=/,\n            alias: 'attr-equals'\n          }, /\"|'/]\n        }\n      },\n      'punctuation': /\\/?>/,\n      'attr-name': {\n        pattern: /[^\\s>\\/]+/,\n        inside: {\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      }\n    }\n  },\n  'entity': [{\n    pattern: /&[\\da-z]{1,8};/i,\n    alias: 'named-entity'\n  }, /&#x?[\\da-f]{1,8};/i]\n};\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] = Prism.languages.markup['entity'];\nPrism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup; // Plugin to make entity title show the real entity, idea by Roman Komarov\n\nPrism.hooks.add('wrap', function (env) {\n  if (env.type === 'entity') {\n    env.attributes['title'] = env.content.replace(/&amp;/, '&');\n  }\n});\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n  /**\n   * Adds an inlined language to markup.\n   *\n   * An example of an inlined language is CSS with `<style>` tags.\n   *\n   * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n   * case insensitive.\n   * @param {string} lang The language key.\n   * @example\n   * addInlined('style', 'css');\n   */\n  value: function addInlined(tagName, lang) {\n    var includedCdataInside = {};\n    includedCdataInside['language-' + lang] = {\n      pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n      lookbehind: true,\n      inside: Prism.languages[lang]\n    };\n    includedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n    var inside = {\n      'included-cdata': {\n        pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n        inside: includedCdataInside\n      }\n    };\n    inside['language-' + lang] = {\n      pattern: /[\\s\\S]+/,\n      inside: Prism.languages[lang]\n    };\n    var def = {};\n    def[tagName] = {\n      pattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () {\n        return tagName;\n      }), 'i'),\n      lookbehind: true,\n      greedy: true,\n      inside: inside\n    };\n    Prism.languages.insertBefore('markup', 'cdata', def);\n  }\n});\nObject.defineProperty(Prism.languages.markup.tag, 'addAttribute', {\n  /**\n   * Adds an pattern to highlight languages embedded in HTML attributes.\n   *\n   * An example of an inlined language is CSS with `style` attributes.\n   *\n   * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n   * case insensitive.\n   * @param {string} lang The language key.\n   * @example\n   * addAttribute('style', 'css');\n   */\n  value: function value(attrName, lang) {\n    Prism.languages.markup.tag.inside['special-attr'].push({\n      pattern: RegExp(/(^|[\"'\\s])/.source + '(?:' + attrName + ')' + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source, 'i'),\n      lookbehind: true,\n      inside: {\n        'attr-name': /^[^\\s=]+/,\n        'attr-value': {\n          pattern: /=[\\s\\S]+/,\n          inside: {\n            'value': {\n              pattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n              lookbehind: true,\n              alias: [lang, 'language-' + lang],\n              inside: Prism.languages[lang]\n            },\n            'punctuation': [{\n              pattern: /^=/,\n              alias: 'attr-equals'\n            }, /\"|'/]\n          }\n        }\n      }\n    });\n  }\n});\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.ssml = Prism.languages.xml;\nPrism.languages.atom = Prism.languages.xml;\nPrism.languages.rss = Prism.languages.xml;\n/* **********************************************\n     Begin prism-css.js\n********************************************** */\n\n(function (Prism) {\n  var string = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;\n  Prism.languages.css = {\n    'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n    'atrule': {\n      pattern: /@[\\w-](?:[^;{\\s]|\\s+(?![\\s{]))*(?:;|(?=\\s*\\{))/,\n      inside: {\n        'rule': /^@[\\w-]+/,\n        'selector-function-argument': {\n          pattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n          lookbehind: true,\n          alias: 'selector'\n        },\n        'keyword': {\n          pattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n          lookbehind: true\n        } // See rest below\n\n      }\n    },\n    'url': {\n      // https://drafts.csswg.org/css-values-3/#urls\n      pattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n      greedy: true,\n      inside: {\n        'function': /^url/i,\n        'punctuation': /^\\(|\\)$/,\n        'string': {\n          pattern: RegExp('^' + string.source + '$'),\n          alias: 'url'\n        }\n      }\n    },\n    'selector': {\n      pattern: RegExp('(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n      lookbehind: true\n    },\n    'string': {\n      pattern: string,\n      greedy: true\n    },\n    'property': {\n      pattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n      lookbehind: true\n    },\n    'important': /!important\\b/i,\n    'function': {\n      pattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n      lookbehind: true\n    },\n    'punctuation': /[(){};:,]/\n  };\n  Prism.languages.css['atrule'].inside.rest = Prism.languages.css;\n  var markup = Prism.languages.markup;\n\n  if (markup) {\n    markup.tag.addInlined('style', 'css');\n    markup.tag.addAttribute('style', 'css');\n  }\n})(Prism);\n/* **********************************************\n     Begin prism-clike.js\n********************************************** */\n\n\nPrism.languages.clike = {\n  'comment': [{\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    lookbehind: true,\n    greedy: true\n  }, {\n    pattern: /(^|[^\\\\:])\\/\\/.*/,\n    lookbehind: true,\n    greedy: true\n  }],\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /(\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n    lookbehind: true,\n    inside: {\n      'punctuation': /[.\\\\]/\n    }\n  },\n  'keyword': /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n  'boolean': /\\b(?:true|false)\\b/,\n  'function': /\\b\\w+(?=\\()/,\n  'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n  'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n  'punctuation': /[{}[\\];(),.:]/\n};\n/* **********************************************\n     Begin prism-javascript.js\n********************************************** */\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n  'class-name': [Prism.languages.clike['class-name'], {\n    pattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:prototype|constructor))/,\n    lookbehind: true\n  }],\n  'keyword': [{\n    pattern: /((?:^|\\})\\s*)catch\\b/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n    lookbehind: true\n  }],\n  // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n  'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n  'number': /\\b(?:(?:0[xX](?:[\\dA-Fa-f](?:_[\\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\\d(?:_\\d)?)+n|NaN|Infinity)\\b|(?:\\b(?:\\d(?:_\\d)?)+\\.?(?:\\d(?:_\\d)?)*|\\B\\.(?:\\d(?:_\\d)?)+)(?:[Ee][+-]?(?:\\d(?:_\\d)?)+)?/,\n  'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+/;\nPrism.languages.insertBefore('javascript', 'keyword', {\n  'regex': {\n    // eslint-disable-next-line regexp/no-dupe-characters-character-class\n    pattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/,\n    lookbehind: true,\n    greedy: true,\n    inside: {\n      'regex-source': {\n        pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n        lookbehind: true,\n        alias: 'language-regex',\n        inside: Prism.languages.regex\n      },\n      'regex-delimiter': /^\\/|\\/$/,\n      'regex-flags': /^[a-z]+$/\n    }\n  },\n  // This must be declared before keyword because we use \"function\" inside the look-forward\n  'function-variable': {\n    pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n    alias: 'function'\n  },\n  'parameter': [{\n    pattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }],\n  'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\nPrism.languages.insertBefore('javascript', 'string', {\n  'hashbang': {\n    pattern: /^#!.*/,\n    greedy: true,\n    alias: 'comment'\n  },\n  'template-string': {\n    pattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n    greedy: true,\n    inside: {\n      'template-punctuation': {\n        pattern: /^`|`$/,\n        alias: 'string'\n      },\n      'interpolation': {\n        pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n        lookbehind: true,\n        inside: {\n          'interpolation-punctuation': {\n            pattern: /^\\$\\{|\\}$/,\n            alias: 'punctuation'\n          },\n          rest: Prism.languages.javascript\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  }\n});\n\nif (Prism.languages.markup) {\n  Prism.languages.markup.tag.addInlined('script', 'javascript'); // add attribute support for all DOM events.\n  // https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n\n  Prism.languages.markup.tag.addAttribute(/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source, 'javascript');\n}\n\nPrism.languages.js = Prism.languages.javascript;\n/* **********************************************\n     Begin prism-file-highlight.js\n********************************************** */\n\n(function () {\n  if (typeof Prism === 'undefined' || typeof document === 'undefined') {\n    return;\n  } // https://developer.mozilla.org/en-US/docs/Web/API/Element/matches#Polyfill\n\n\n  if (!Element.prototype.matches) {\n    Element.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n  }\n\n  var LOADING_MESSAGE = 'Loading…';\n\n  var FAILURE_MESSAGE = function FAILURE_MESSAGE(status, message) {\n    return '✖ Error ' + status + ' while fetching file: ' + message;\n  };\n\n  var FAILURE_EMPTY_MESSAGE = '✖ Error: File does not exist or is empty';\n  var EXTENSIONS = {\n    'js': 'javascript',\n    'py': 'python',\n    'rb': 'ruby',\n    'ps1': 'powershell',\n    'psm1': 'powershell',\n    'sh': 'bash',\n    'bat': 'batch',\n    'h': 'c',\n    'tex': 'latex'\n  };\n  var STATUS_ATTR = 'data-src-status';\n  var STATUS_LOADING = 'loading';\n  var STATUS_LOADED = 'loaded';\n  var STATUS_FAILED = 'failed';\n  var SELECTOR = 'pre[data-src]:not([' + STATUS_ATTR + '=\"' + STATUS_LOADED + '\"])' + ':not([' + STATUS_ATTR + '=\"' + STATUS_LOADING + '\"])';\n  var lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\n  /**\n   * Sets the Prism `language-xxxx` or `lang-xxxx` class to the given language.\n   *\n   * @param {HTMLElement} element\n   * @param {string} language\n   * @returns {void}\n   */\n\n  function setLanguageClass(element, language) {\n    var className = element.className;\n    className = className.replace(lang, ' ') + ' language-' + language;\n    element.className = className.replace(/\\s+/g, ' ').trim();\n  }\n\n  Prism.hooks.add('before-highlightall', function (env) {\n    env.selector += ', ' + SELECTOR;\n  });\n  Prism.hooks.add('before-sanity-check', function (env) {\n    var pre =\n    /** @type {HTMLPreElement} */\n    env.element;\n\n    if (pre.matches(SELECTOR)) {\n      env.code = ''; // fast-path the whole thing and go to complete\n\n      pre.setAttribute(STATUS_ATTR, STATUS_LOADING); // mark as loading\n      // add code element with loading message\n\n      var code = pre.appendChild(document.createElement('CODE'));\n      code.textContent = LOADING_MESSAGE;\n      var src = pre.getAttribute('data-src');\n      var language = env.language;\n\n      if (language === 'none') {\n        // the language might be 'none' because there is no language set;\n        // in this case, we want to use the extension as the language\n        var extension = (/\\.(\\w+)$/.exec(src) || [, 'none'])[1];\n        language = EXTENSIONS[extension] || extension;\n      } // set language classes\n\n\n      setLanguageClass(code, language);\n      setLanguageClass(pre, language); // preload the language\n\n      var autoloader = Prism.plugins.autoloader;\n\n      if (autoloader) {\n        autoloader.loadLanguages(language);\n      } // load file\n\n\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', src, true);\n\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState == 4) {\n          if (xhr.status < 400 && xhr.responseText) {\n            // mark as loaded\n            pre.setAttribute(STATUS_ATTR, STATUS_LOADED); // highlight code\n\n            code.textContent = xhr.responseText;\n            Prism.highlightElement(code);\n          } else {\n            // mark as failed\n            pre.setAttribute(STATUS_ATTR, STATUS_FAILED);\n\n            if (xhr.status >= 400) {\n              code.textContent = FAILURE_MESSAGE(xhr.status, xhr.statusText);\n            } else {\n              code.textContent = FAILURE_EMPTY_MESSAGE;\n            }\n          }\n        }\n      };\n\n      xhr.send(null);\n    }\n  });\n  Prism.plugins.fileHighlight = {\n    /**\n     * Executes the File Highlight plugin for all matching `pre` elements under the given container.\n     *\n     * Note: Elements which are already loaded or currently loading will not be touched by this method.\n     *\n     * @param {ParentNode} [container=document]\n     */\n    highlight: function highlight(container) {\n      var elements = (container || document).querySelectorAll(SELECTOR);\n\n      for (var i = 0, element; element = elements[i++];) {\n        Prism.highlightElement(element);\n      }\n    }\n  };\n  var logged = false;\n  /** @deprecated Use `Prism.plugins.fileHighlight.highlight` instead. */\n\n  Prism.fileHighlight = function () {\n    if (!logged) {\n      console.warn('Prism.fileHighlight is deprecated. Use `Prism.plugins.fileHighlight.highlight` instead.');\n      logged = true;\n    }\n\n    Prism.plugins.fileHighlight.highlight.apply(this, arguments);\n  };\n})();","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  padding: 80px 200px 0px 200px;\n  color: #FFF;\n\n  @media (max-width: 950px) {\n    padding: 80px 20px 0px 20px;\n  }\n`;\n\nexport const MarkdownTheme = styled.div`\n  padding: 10px;\n  text-align: justify;\n  text-justify: inter-word;\n\n  p, li, ul, span, a {\n    font-size: 15px;\n    line-height: 26px;\n  }\n\n  li {\n    padding-bottom: 10px;\n  }\n\n  code {\n    background: #131313;\n    border: 1px solid#ff575714;\n    padding: 1px;\n    border-radius: 3px;\n  }\n\n  ul, ol {\n    padding: 20px;  \n  }\n\n  a {\n    color: #ff5757;\n  }\n  \n  h1{\n    font-size: 32px;\n  }\n\n  h1, h2, h3 {\n    color: #FFF !important;\n    margin: 20px 0px 20px 0px;\n    font-family: lato;\n    font-weight: 100;\n    padding-top: 30px;\n  }\n  p {\n    color: #e0e0e0;\n  }\n\n  a {\n    text-decoration: none;\n  }\n\n  pre {\n    padding: 20px;\n    border-radius: 5px;\n    margin: 20px 0px;\n    overflow: auto;\n  }\n\n  ul {\n    list-style-position: inside;\n  }\n\n  img {\n    max-width: 100%;\n  }\n`;\n\nexport const Title = styled.div`\n  font-size: 30px;\n  text-align: center;\n  margin: 30px 0px 70px 0px;\n  padding: 20px;\n  width: fit-content;\n  left: 50%;\n  position: relative;\n  transform: translate(-50%);\n  border-bottom: 10px solid #ff5757;\n`;\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n * MIT license http://www.opensource.org/licenses/mit-license.php/\n * @author Lea Verou http://lea.verou.me\n */\n\n/**\n * prism-react-renderer:\n * This file has been modified to remove:\n * - globals and window dependency\n * - worker support\n * - highlightAll and other element dependent methods\n * - _.hooks helpers\n * - UMD/node-specific hacks\n * It has also been run through prettier\n */\nvar Prism = function () {\n  var uniqueId = 0;\n  var _ = {\n    util: {\n      encode: function encode(tokens) {\n        if (tokens instanceof Token) {\n          return new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);\n        } else if (_.util.type(tokens) === \"Array\") {\n          return tokens.map(_.util.encode);\n        } else {\n          return tokens.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/\\u00a0/g, \" \");\n        }\n      },\n      type: function type(o) {\n        return Object.prototype.toString.call(o).match(/\\[object (\\w+)\\]/)[1];\n      },\n      objId: function objId(obj) {\n        if (!obj[\"__id\"]) {\n          Object.defineProperty(obj, \"__id\", {\n            value: ++uniqueId\n          });\n        }\n\n        return obj[\"__id\"];\n      },\n      // Deep clone a language definition (e.g. to extend it)\n      clone: function clone(o, visited) {\n        var type = _.util.type(o);\n\n        visited = visited || {};\n\n        switch (type) {\n          case \"Object\":\n            if (visited[_.util.objId(o)]) {\n              return visited[_.util.objId(o)];\n            }\n\n            var clone = {};\n            visited[_.util.objId(o)] = clone;\n\n            for (var key in o) {\n              if (o.hasOwnProperty(key)) {\n                clone[key] = _.util.clone(o[key], visited);\n              }\n            }\n\n            return clone;\n\n          case \"Array\":\n            if (visited[_.util.objId(o)]) {\n              return visited[_.util.objId(o)];\n            }\n\n            var clone = [];\n            visited[_.util.objId(o)] = clone;\n            o.forEach(function (v, i) {\n              clone[i] = _.util.clone(v, visited);\n            });\n            return clone;\n        }\n\n        return o;\n      }\n    },\n    languages: {\n      extend: function extend(id, redef) {\n        var lang = _.util.clone(_.languages[id]);\n\n        for (var key in redef) {\n          lang[key] = redef[key];\n        }\n\n        return lang;\n      },\n\n      /**\n       * Insert a token before another token in a language literal\n       * As this needs to recreate the object (we cannot actually insert before keys in object literals),\n       * we cannot just provide an object, we need anobject and a key.\n       * @param inside The key (or language id) of the parent\n       * @param before The key to insert before. If not provided, the function appends instead.\n       * @param insert Object with the key/value pairs to insert\n       * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\n       */\n      insertBefore: function insertBefore(inside, before, insert, root) {\n        root = root || _.languages;\n        var grammar = root[inside];\n\n        if (arguments.length == 2) {\n          insert = arguments[1];\n\n          for (var newToken in insert) {\n            if (insert.hasOwnProperty(newToken)) {\n              grammar[newToken] = insert[newToken];\n            }\n          }\n\n          return grammar;\n        }\n\n        var ret = {};\n\n        for (var token in grammar) {\n          if (grammar.hasOwnProperty(token)) {\n            if (token == before) {\n              for (var newToken in insert) {\n                if (insert.hasOwnProperty(newToken)) {\n                  ret[newToken] = insert[newToken];\n                }\n              }\n            }\n\n            ret[token] = grammar[token];\n          }\n        } // Update references in other language definitions\n\n\n        _.languages.DFS(_.languages, function (key, value) {\n          if (value === root[inside] && key != inside) {\n            this[key] = ret;\n          }\n        });\n\n        return root[inside] = ret;\n      },\n      // Traverse a language definition with Depth First Search\n      DFS: function DFS(o, callback, type, visited) {\n        visited = visited || {};\n\n        for (var i in o) {\n          if (o.hasOwnProperty(i)) {\n            callback.call(o, i, o[i], type || i);\n\n            if (_.util.type(o[i]) === \"Object\" && !visited[_.util.objId(o[i])]) {\n              visited[_.util.objId(o[i])] = true;\n\n              _.languages.DFS(o[i], callback, null, visited);\n            } else if (_.util.type(o[i]) === \"Array\" && !visited[_.util.objId(o[i])]) {\n              visited[_.util.objId(o[i])] = true;\n\n              _.languages.DFS(o[i], callback, i, visited);\n            }\n          }\n        }\n      }\n    },\n    plugins: {},\n    highlight: function highlight(text, grammar, language) {\n      var env = {\n        code: text,\n        grammar: grammar,\n        language: language\n      };\n\n      _.hooks.run(\"before-tokenize\", env);\n\n      env.tokens = _.tokenize(env.code, env.grammar);\n\n      _.hooks.run(\"after-tokenize\", env);\n\n      return Token.stringify(_.util.encode(env.tokens), env.language);\n    },\n    matchGrammar: function matchGrammar(text, strarr, grammar, index, startPos, oneshot, target) {\n      var Token = _.Token;\n\n      for (var token in grammar) {\n        if (!grammar.hasOwnProperty(token) || !grammar[token]) {\n          continue;\n        }\n\n        if (token == target) {\n          return;\n        }\n\n        var patterns = grammar[token];\n        patterns = _.util.type(patterns) === \"Array\" ? patterns : [patterns];\n\n        for (var j = 0; j < patterns.length; ++j) {\n          var pattern = patterns[j],\n              inside = pattern.inside,\n              lookbehind = !!pattern.lookbehind,\n              greedy = !!pattern.greedy,\n              lookbehindLength = 0,\n              alias = pattern.alias;\n\n          if (greedy && !pattern.pattern.global) {\n            // Without the global flag, lastIndex won't work\n            var flags = pattern.pattern.toString().match(/[imuy]*$/)[0];\n            pattern.pattern = RegExp(pattern.pattern.source, flags + \"g\");\n          }\n\n          pattern = pattern.pattern || pattern; // Don’t cache length as it changes during the loop\n\n          for (var i = index, pos = startPos; i < strarr.length; pos += strarr[i].length, ++i) {\n            var str = strarr[i];\n\n            if (strarr.length > text.length) {\n              // Something went terribly wrong, ABORT, ABORT!\n              return;\n            }\n\n            if (str instanceof Token) {\n              continue;\n            }\n\n            if (greedy && i != strarr.length - 1) {\n              pattern.lastIndex = pos;\n              var match = pattern.exec(text);\n\n              if (!match) {\n                break;\n              }\n\n              var from = match.index + (lookbehind ? match[1].length : 0),\n                  to = match.index + match[0].length,\n                  k = i,\n                  p = pos;\n\n              for (var len = strarr.length; k < len && (p < to || !strarr[k].type && !strarr[k - 1].greedy); ++k) {\n                p += strarr[k].length; // Move the index i to the element in strarr that is closest to from\n\n                if (from >= p) {\n                  ++i;\n                  pos = p;\n                }\n              } // If strarr[i] is a Token, then the match starts inside another Token, which is invalid\n\n\n              if (strarr[i] instanceof Token) {\n                continue;\n              } // Number of tokens to delete and replace with the new match\n\n\n              delNum = k - i;\n              str = text.slice(pos, p);\n              match.index -= pos;\n            } else {\n              pattern.lastIndex = 0;\n              var match = pattern.exec(str),\n                  delNum = 1;\n            }\n\n            if (!match) {\n              if (oneshot) {\n                break;\n              }\n\n              continue;\n            }\n\n            if (lookbehind) {\n              lookbehindLength = match[1] ? match[1].length : 0;\n            }\n\n            var from = match.index + lookbehindLength,\n                match = match[0].slice(lookbehindLength),\n                to = from + match.length,\n                before = str.slice(0, from),\n                after = str.slice(to);\n            var args = [i, delNum];\n\n            if (before) {\n              ++i;\n              pos += before.length;\n              args.push(before);\n            }\n\n            var wrapped = new Token(token, inside ? _.tokenize(match, inside) : match, alias, match, greedy);\n            args.push(wrapped);\n\n            if (after) {\n              args.push(after);\n            }\n\n            Array.prototype.splice.apply(strarr, args);\n\n            if (delNum != 1) {\n              _.matchGrammar(text, strarr, grammar, i, pos, true, token);\n            }\n\n            if (oneshot) {\n              break;\n            }\n          }\n        }\n      }\n    },\n    hooks: {\n      add: function add() {},\n      run: function run(name, env) {}\n    },\n    tokenize: function tokenize(text, grammar, language) {\n      var strarr = [text];\n      var rest = grammar.rest;\n\n      if (rest) {\n        for (var token in rest) {\n          grammar[token] = rest[token];\n        }\n\n        delete grammar.rest;\n      }\n\n      _.matchGrammar(text, strarr, grammar, 0, 0, false);\n\n      return strarr;\n    }\n  };\n\n  var Token = _.Token = function (type, content, alias, matchedStr, greedy) {\n    this.type = type;\n    this.content = content;\n    this.alias = alias; // Copy of the full string this token was created from\n\n    this.length = (matchedStr || \"\").length | 0;\n    this.greedy = !!greedy;\n  };\n\n  Token.stringify = function (o, language, parent) {\n    if (typeof o == \"string\") {\n      return o;\n    }\n\n    if (_.util.type(o) === \"Array\") {\n      return o.map(function (element) {\n        return Token.stringify(element, language, o);\n      }).join(\"\");\n    }\n\n    var env = {\n      type: o.type,\n      content: Token.stringify(o.content, language, parent),\n      tag: \"span\",\n      classes: [\"token\", o.type],\n      attributes: {},\n      language: language,\n      parent: parent\n    };\n\n    if (o.alias) {\n      var aliases = _.util.type(o.alias) === \"Array\" ? o.alias : [o.alias];\n      Array.prototype.push.apply(env.classes, aliases);\n    }\n\n    var attributes = Object.keys(env.attributes).map(function (name) {\n      return name + '=\"' + (env.attributes[name] || \"\").replace(/\"/g, \"&quot;\") + '\"';\n    }).join(\" \");\n    return \"<\" + env.tag + ' class=\"' + env.classes.join(\" \") + '\"' + (attributes ? \" \" + attributes : \"\") + \">\" + env.content + \"</\" + env.tag + \">\";\n  };\n\n  return _;\n}();\n/* This content is auto-generated to include some prismjs language components: */\n\n/* \"prismjs/components/prism-markup\" */\n\n\nPrism.languages.markup = {\n  'comment': /<!--[\\s\\S]*?-->/,\n  'prolog': /<\\?[\\s\\S]+?\\?>/,\n  'doctype': {\n    // https://www.w3.org/TR/xml/#NT-doctypedecl\n    pattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n    greedy: true,\n    inside: {\n      'internal-subset': {\n        pattern: /(\\[)[\\s\\S]+(?=\\]>$)/,\n        lookbehind: true,\n        greedy: true,\n        inside: null // see below\n\n      },\n      'string': {\n        pattern: /\"[^\"]*\"|'[^']*'/,\n        greedy: true\n      },\n      'punctuation': /^<!|>$|[[\\]]/,\n      'doctype-tag': /^DOCTYPE/,\n      'name': /[^\\s<>'\"]+/\n    }\n  },\n  'cdata': /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n  'tag': {\n    pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n    greedy: true,\n    inside: {\n      'tag': {\n        pattern: /^<\\/?[^\\s>\\/]+/,\n        inside: {\n          'punctuation': /^<\\/?/,\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      },\n      'attr-value': {\n        pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n        inside: {\n          'punctuation': [{\n            pattern: /^=/,\n            alias: 'attr-equals'\n          }, /\"|'/]\n        }\n      },\n      'punctuation': /\\/?>/,\n      'attr-name': {\n        pattern: /[^\\s>\\/]+/,\n        inside: {\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      }\n    }\n  },\n  'entity': [{\n    pattern: /&[\\da-z]{1,8};/i,\n    alias: 'named-entity'\n  }, /&#x?[\\da-f]{1,8};/i]\n};\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] = Prism.languages.markup['entity'];\nPrism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup; // Plugin to make entity title show the real entity, idea by Roman Komarov\n\nPrism.hooks.add('wrap', function (env) {\n  if (env.type === 'entity') {\n    env.attributes['title'] = env.content.replace(/&amp;/, '&');\n  }\n});\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n  /**\n   * Adds an inlined language to markup.\n   *\n   * An example of an inlined language is CSS with `<style>` tags.\n   *\n   * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n   * case insensitive.\n   * @param {string} lang The language key.\n   * @example\n   * addInlined('style', 'css');\n   */\n  value: function addInlined(tagName, lang) {\n    var includedCdataInside = {};\n    includedCdataInside['language-' + lang] = {\n      pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n      lookbehind: true,\n      inside: Prism.languages[lang]\n    };\n    includedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n    var inside = {\n      'included-cdata': {\n        pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n        inside: includedCdataInside\n      }\n    };\n    inside['language-' + lang] = {\n      pattern: /[\\s\\S]+/,\n      inside: Prism.languages[lang]\n    };\n    var def = {};\n    def[tagName] = {\n      pattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () {\n        return tagName;\n      }), 'i'),\n      lookbehind: true,\n      greedy: true,\n      inside: inside\n    };\n    Prism.languages.insertBefore('markup', 'cdata', def);\n  }\n});\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.ssml = Prism.languages.xml;\nPrism.languages.atom = Prism.languages.xml;\nPrism.languages.rss = Prism.languages.xml;\n/* \"prismjs/components/prism-bash\" */\n\n(function (Prism) {\n  // $ set | grep '^[A-Z][^[:space:]]*=' | cut -d= -f1 | tr '\\n' '|'\n  // + LC_ALL, RANDOM, REPLY, SECONDS.\n  // + make sure PS1..4 are here as they are not always set,\n  // - some useless things.\n  var envVars = '\\\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\\\b';\n  var commandAfterHeredoc = {\n    pattern: /(^([\"']?)\\w+\\2)[ \\t]+\\S.*/,\n    lookbehind: true,\n    alias: 'punctuation',\n    // this looks reasonably well in all themes\n    inside: null // see below\n\n  };\n  var insideString = {\n    'bash': commandAfterHeredoc,\n    'environment': {\n      pattern: RegExp(\"\\\\$\" + envVars),\n      alias: 'constant'\n    },\n    'variable': [// [0]: Arithmetic Environment\n    {\n      pattern: /\\$?\\(\\([\\s\\S]+?\\)\\)/,\n      greedy: true,\n      inside: {\n        // If there is a $ sign at the beginning highlight $(( and )) as variable\n        'variable': [{\n          pattern: /(^\\$\\(\\([\\s\\S]+)\\)\\)/,\n          lookbehind: true\n        }, /^\\$\\(\\(/],\n        'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n        // Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic\n        'operator': /--?|-=|\\+\\+?|\\+=|!=?|~|\\*\\*?|\\*=|\\/=?|%=?|<<=?|>>=?|<=?|>=?|==?|&&?|&=|\\^=?|\\|\\|?|\\|=|\\?|:/,\n        // If there is no $ sign at the beginning highlight (( and )) as punctuation\n        'punctuation': /\\(\\(?|\\)\\)?|,|;/\n      }\n    }, // [1]: Command Substitution\n    {\n      pattern: /\\$\\((?:\\([^)]+\\)|[^()])+\\)|`[^`]+`/,\n      greedy: true,\n      inside: {\n        'variable': /^\\$\\(|^`|\\)$|`$/\n      }\n    }, // [2]: Brace expansion\n    {\n      pattern: /\\$\\{[^}]+\\}/,\n      greedy: true,\n      inside: {\n        'operator': /:[-=?+]?|[!\\/]|##?|%%?|\\^\\^?|,,?/,\n        'punctuation': /[\\[\\]]/,\n        'environment': {\n          pattern: RegExp(\"(\\\\{)\" + envVars),\n          lookbehind: true,\n          alias: 'constant'\n        }\n      }\n    }, /\\$(?:\\w+|[#?*!@$])/],\n    // Escape sequences from echo and printf's manuals, and escaped quotes.\n    'entity': /\\\\(?:[abceEfnrtv\\\\\"]|O?[0-7]{1,3}|x[0-9a-fA-F]{1,2}|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8})/\n  };\n  Prism.languages.bash = {\n    'shebang': {\n      pattern: /^#!\\s*\\/.*/,\n      alias: 'important'\n    },\n    'comment': {\n      pattern: /(^|[^\"{\\\\$])#.*/,\n      lookbehind: true\n    },\n    'function-name': [// a) function foo {\n    // b) foo() {\n    // c) function foo() {\n    // but not “foo {”\n    {\n      // a) and c)\n      pattern: /(\\bfunction\\s+)\\w+(?=(?:\\s*\\(?:\\s*\\))?\\s*\\{)/,\n      lookbehind: true,\n      alias: 'function'\n    }, {\n      // b)\n      pattern: /\\b\\w+(?=\\s*\\(\\s*\\)\\s*\\{)/,\n      alias: 'function'\n    }],\n    // Highlight variable names as variables in for and select beginnings.\n    'for-or-select': {\n      pattern: /(\\b(?:for|select)\\s+)\\w+(?=\\s+in\\s)/,\n      alias: 'variable',\n      lookbehind: true\n    },\n    // Highlight variable names as variables in the left-hand part\n    // of assignments (“=” and “+=”).\n    'assign-left': {\n      pattern: /(^|[\\s;|&]|[<>]\\()\\w+(?=\\+?=)/,\n      inside: {\n        'environment': {\n          pattern: RegExp(\"(^|[\\\\s;|&]|[<>]\\\\()\" + envVars),\n          lookbehind: true,\n          alias: 'constant'\n        }\n      },\n      alias: 'variable',\n      lookbehind: true\n    },\n    'string': [// Support for Here-documents https://en.wikipedia.org/wiki/Here_document\n    {\n      pattern: /((?:^|[^<])<<-?\\s*)(\\w+?)\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\2/,\n      lookbehind: true,\n      greedy: true,\n      inside: insideString\n    }, // Here-document with quotes around the tag\n    // → No expansion (so no “inside”).\n    {\n      pattern: /((?:^|[^<])<<-?\\s*)([\"'])(\\w+)\\2\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\3/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'bash': commandAfterHeredoc\n      }\n    }, // “Normal” string\n    {\n      pattern: /(^|[^\\\\](?:\\\\\\\\)*)([\"'])(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|\\$(?!\\()|`[^`]+`|(?!\\2)[^\\\\`$])*\\2/,\n      lookbehind: true,\n      greedy: true,\n      inside: insideString\n    }],\n    'environment': {\n      pattern: RegExp(\"\\\\$?\" + envVars),\n      alias: 'constant'\n    },\n    'variable': insideString.variable,\n    'function': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:add|apropos|apt|aptitude|apt-cache|apt-get|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|composer|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    'keyword': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:if|then|else|elif|fi|for|while|in|case|esac|function|select|do|done|until)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    // https://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n    'builtin': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:\\.|:|break|cd|continue|eval|exec|exit|export|getopts|hash|pwd|readonly|return|shift|test|times|trap|umask|unset|alias|bind|builtin|caller|command|declare|echo|enable|help|let|local|logout|mapfile|printf|read|readarray|source|type|typeset|ulimit|unalias|set|shopt)(?=$|[)\\s;|&])/,\n      lookbehind: true,\n      // Alias added to make those easier to distinguish from strings.\n      alias: 'class-name'\n    },\n    'boolean': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:true|false)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    'file-descriptor': {\n      pattern: /\\B&\\d\\b/,\n      alias: 'important'\n    },\n    'operator': {\n      // Lots of redirections here, but not just that.\n      pattern: /\\d?<>|>\\||\\+=|==?|!=?|=~|<<[<-]?|[&\\d]?>>|\\d?[<>]&?|&[>&]?|\\|[&|]?|<=?|>=?/,\n      inside: {\n        'file-descriptor': {\n          pattern: /^\\d/,\n          alias: 'important'\n        }\n      }\n    },\n    'punctuation': /\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];\\\\]/,\n    'number': {\n      pattern: /(^|\\s)(?:[1-9]\\d*|0)(?:[.,]\\d+)?\\b/,\n      lookbehind: true\n    }\n  };\n  commandAfterHeredoc.inside = Prism.languages.bash;\n  /* Patterns in command substitution. */\n\n  var toBeCopied = ['comment', 'function-name', 'for-or-select', 'assign-left', 'string', 'environment', 'function', 'keyword', 'builtin', 'boolean', 'file-descriptor', 'operator', 'punctuation', 'number'];\n  var inside = insideString.variable[1].inside;\n\n  for (var i = 0; i < toBeCopied.length; i++) {\n    inside[toBeCopied[i]] = Prism.languages.bash[toBeCopied[i]];\n  }\n\n  Prism.languages.shell = Prism.languages.bash;\n})(Prism);\n/* \"prismjs/components/prism-clike\" */\n\n\nPrism.languages.clike = {\n  'comment': [{\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    lookbehind: true,\n    greedy: true\n  }, {\n    pattern: /(^|[^\\\\:])\\/\\/.*/,\n    lookbehind: true,\n    greedy: true\n  }],\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /(\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n    lookbehind: true,\n    inside: {\n      'punctuation': /[.\\\\]/\n    }\n  },\n  'keyword': /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n  'boolean': /\\b(?:true|false)\\b/,\n  'function': /\\w+(?=\\()/,\n  'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n  'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n  'punctuation': /[{}[\\];(),.:]/\n};\n/* \"prismjs/components/prism-c\" */\n\nPrism.languages.c = Prism.languages.extend('clike', {\n  'comment': {\n    pattern: /\\/\\/(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n?|\\n|(?![\\r\\n])))*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /(\\b(?:enum|struct)\\s+(?:__attribute__\\s*\\(\\([\\s\\S]*?\\)\\)\\s*)?)\\w+|\\b[a-z]\\w*_t\\b/,\n    lookbehind: true\n  },\n  'keyword': /\\b(?:__attribute__|_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while)\\b/,\n  'function': /[a-z_]\\w*(?=\\s*\\()/i,\n  'number': /(?:\\b0x(?:[\\da-f]+(?:\\.[\\da-f]*)?|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]{0,4}/i,\n  'operator': />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?/\n});\nPrism.languages.insertBefore('c', 'string', {\n  'macro': {\n    // allow for multiline macro definitions\n    // spaces after the # character compile fine with gcc\n    pattern: /(^\\s*)#\\s*[a-z](?:[^\\r\\n\\\\/]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n    lookbehind: true,\n    greedy: true,\n    alias: 'property',\n    inside: {\n      'string': [{\n        // highlight the path of the include statement as a string\n        pattern: /^(#\\s*include\\s*)<[^>]+>/,\n        lookbehind: true\n      }, Prism.languages.c['string']],\n      'comment': Prism.languages.c['comment'],\n      'macro-name': [{\n        pattern: /(^#\\s*define\\s+)\\w+\\b(?!\\()/i,\n        lookbehind: true\n      }, {\n        pattern: /(^#\\s*define\\s+)\\w+\\b(?=\\()/i,\n        lookbehind: true,\n        alias: 'function'\n      }],\n      // highlight macro directives as keywords\n      'directive': {\n        pattern: /^(#\\s*)[a-z]+/,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      'directive-hash': /^#/,\n      'punctuation': /##|\\\\(?=[\\r\\n])/,\n      'expression': {\n        pattern: /\\S[\\s\\S]*/,\n        inside: Prism.languages.c\n      }\n    }\n  },\n  // highlight predefined macros as constants\n  'constant': /\\b(?:__FILE__|__LINE__|__DATE__|__TIME__|__TIMESTAMP__|__func__|EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|stdin|stdout|stderr)\\b/\n});\ndelete Prism.languages.c['boolean'];\n/* \"prismjs/components/prism-cpp\" */\n\n(function (Prism) {\n  var keyword = /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char8_t|char16_t|char32_t|class|compl|concept|const|consteval|constexpr|constinit|const_cast|continue|co_await|co_return|co_yield|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|float|for|friend|goto|if|inline|int|int8_t|int16_t|int32_t|int64_t|uint8_t|uint16_t|uint32_t|uint64_t|long|mutable|namespace|new|noexcept|nullptr|operator|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/;\n  Prism.languages.cpp = Prism.languages.extend('c', {\n    'class-name': [{\n      pattern: RegExp(/(\\b(?:class|concept|enum|struct|typename)\\s+)(?!<keyword>)\\w+/.source.replace(/<keyword>/g, function () {\n        return keyword.source;\n      })),\n      lookbehind: true\n    }, // This is intended to capture the class name of method implementations like:\n    //   void foo::bar() const {}\n    // However! The `foo` in the above example could also be a namespace, so we only capture the class name if\n    // it starts with an uppercase letter. This approximation should give decent results.\n    /\\b[A-Z]\\w*(?=\\s*::\\s*\\w+\\s*\\()/, // This will capture the class name before destructors like:\n    //   Foo::~Foo() {}\n    /\\b[A-Z_]\\w*(?=\\s*::\\s*~\\w+\\s*\\()/i, // This also intends to capture the class name of method implementations but here the class has template\n    // parameters, so it can't be a namespace (until C++ adds generic namespaces).\n    /\\w+(?=\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\\s*::\\s*\\w+\\s*\\()/],\n    'keyword': keyword,\n    'number': {\n      pattern: /(?:\\b0b[01']+|\\b0x(?:[\\da-f']+(?:\\.[\\da-f']*)?|\\.[\\da-f']+)(?:p[+-]?[\\d']+)?|(?:\\b[\\d']+(?:\\.[\\d']*)?|\\B\\.[\\d']+)(?:e[+-]?[\\d']+)?)[ful]{0,4}/i,\n      greedy: true\n    },\n    'operator': />>=?|<<=?|->|([-+&|:])\\1|[?:~]|<=>|[-+*/%&|^!=<>]=?|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/,\n    'boolean': /\\b(?:true|false)\\b/\n  });\n  Prism.languages.insertBefore('cpp', 'string', {\n    'raw-string': {\n      pattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,\n      alias: 'string',\n      greedy: true\n    }\n  });\n  Prism.languages.insertBefore('cpp', 'class-name', {\n    // the base clause is an optional list of parent classes\n    // https://en.cppreference.com/w/cpp/language/class\n    'base-clause': {\n      pattern: /(\\b(?:class|struct)\\s+\\w+\\s*:\\s*)[^;{}\"'\\s]+(?:\\s+[^;{}\"'\\s]+)*(?=\\s*[;{])/,\n      lookbehind: true,\n      greedy: true,\n      inside: Prism.languages.extend('cpp', {})\n    }\n  });\n  Prism.languages.insertBefore('inside', 'operator', {\n    // All untokenized words that are not namespaces should be class names\n    'class-name': /\\b[a-z_]\\w*\\b(?!\\s*::)/i\n  }, Prism.languages.cpp['base-clause']);\n})(Prism);\n/* \"prismjs/components/prism-css\" */\n\n\n(function (Prism) {\n  var string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n  Prism.languages.css = {\n    'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n    'atrule': {\n      pattern: /@[\\w-](?:[^;{\\s]|\\s+(?![\\s{]))*(?:;|(?=\\s*\\{))/,\n      inside: {\n        'rule': /^@[\\w-]+/,\n        'selector-function-argument': {\n          pattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n          lookbehind: true,\n          alias: 'selector'\n        },\n        'keyword': {\n          pattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n          lookbehind: true\n        } // See rest below\n\n      }\n    },\n    'url': {\n      // https://drafts.csswg.org/css-values-3/#urls\n      pattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n      greedy: true,\n      inside: {\n        'function': /^url/i,\n        'punctuation': /^\\(|\\)$/,\n        'string': {\n          pattern: RegExp('^' + string.source + '$'),\n          alias: 'url'\n        }\n      }\n    },\n    'selector': RegExp('[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n    'string': {\n      pattern: string,\n      greedy: true\n    },\n    'property': /(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n    'important': /!important\\b/i,\n    'function': /[-a-z0-9]+(?=\\()/i,\n    'punctuation': /[(){};:,]/\n  };\n  Prism.languages.css['atrule'].inside.rest = Prism.languages.css;\n  var markup = Prism.languages.markup;\n\n  if (markup) {\n    markup.tag.addInlined('style', 'css');\n    Prism.languages.insertBefore('inside', 'attr-value', {\n      'style-attr': {\n        pattern: /(^|[\"'\\s])style\\s*=\\s*(?:\"[^\"]*\"|'[^']*')/i,\n        lookbehind: true,\n        inside: {\n          'attr-value': {\n            pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n            inside: {\n              'style': {\n                pattern: /([\"'])[\\s\\S]+(?=[\"']$)/,\n                lookbehind: true,\n                alias: 'language-css',\n                inside: Prism.languages.css\n              },\n              'punctuation': [{\n                pattern: /^=/,\n                alias: 'attr-equals'\n              }, /\"|'/]\n            }\n          },\n          'attr-name': /^style/i\n        }\n      }\n    }, markup.tag);\n  }\n})(Prism);\n/* \"prismjs/components/prism-css-extras\" */\n\n\n(function (Prism) {\n  var string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n  var selectorInside;\n  Prism.languages.css.selector = {\n    pattern: Prism.languages.css.selector,\n    inside: selectorInside = {\n      'pseudo-element': /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\n      'pseudo-class': /:[-\\w]+/,\n      'class': /\\.[-\\w]+/,\n      'id': /#[-\\w]+/,\n      'attribute': {\n        pattern: RegExp('\\\\[(?:[^[\\\\]\"\\']|' + string.source + ')*\\\\]'),\n        greedy: true,\n        inside: {\n          'punctuation': /^\\[|\\]$/,\n          'case-sensitivity': {\n            pattern: /(\\s)[si]$/i,\n            lookbehind: true,\n            alias: 'keyword'\n          },\n          'namespace': {\n            pattern: /^(\\s*)(?:(?!\\s)[-*\\w\\xA0-\\uFFFF])*\\|(?!=)/,\n            lookbehind: true,\n            inside: {\n              'punctuation': /\\|$/\n            }\n          },\n          'attr-name': {\n            pattern: /^(\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+/,\n            lookbehind: true\n          },\n          'attr-value': [string, {\n            pattern: /(=\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+(?=\\s*$)/,\n            lookbehind: true\n          }],\n          'operator': /[|~*^$]?=/\n        }\n      },\n      'n-th': [{\n        pattern: /(\\(\\s*)[+-]?\\d*[\\dn](?:\\s*[+-]\\s*\\d+)?(?=\\s*\\))/,\n        lookbehind: true,\n        inside: {\n          'number': /[\\dn]+/,\n          'operator': /[+-]/\n        }\n      }, {\n        pattern: /(\\(\\s*)(?:even|odd)(?=\\s*\\))/i,\n        lookbehind: true\n      }],\n      'combinator': />|\\+|~|\\|\\|/,\n      // the `tag` token has been existed and removed.\n      // because we can't find a perfect tokenize to match it.\n      // if you want to add it, please read https://github.com/PrismJS/prism/pull/2373 first.\n      'punctuation': /[(),]/\n    }\n  };\n  Prism.languages.css['atrule'].inside['selector-function-argument'].inside = selectorInside;\n  Prism.languages.insertBefore('css', 'property', {\n    'variable': {\n      pattern: /(^|[^-\\w\\xA0-\\uFFFF])--(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*/i,\n      lookbehind: true\n    }\n  });\n  var unit = {\n    pattern: /(\\b\\d+)(?:%|[a-z]+\\b)/,\n    lookbehind: true\n  }; // 123 -123 .123 -.123 12.3 -12.3\n\n  var number = {\n    pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n    lookbehind: true\n  };\n  Prism.languages.insertBefore('css', 'function', {\n    'operator': {\n      pattern: /(\\s)[+\\-*\\/](?=\\s)/,\n      lookbehind: true\n    },\n    // CAREFUL!\n    // Previewers and Inline color use hexcode and color.\n    'hexcode': {\n      pattern: /\\B#(?:[\\da-f]{1,2}){3,4}\\b/i,\n      alias: 'color'\n    },\n    'color': [/\\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\\b/i, {\n      pattern: /\\b(?:rgb|hsl)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:rgb|hsl)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n      inside: {\n        'unit': unit,\n        'number': number,\n        'function': /[\\w-]+(?=\\()/,\n        'punctuation': /[(),]/\n      }\n    }],\n    // it's important that there is no boundary assertion after the hex digits\n    'entity': /\\\\[\\da-f]{1,8}/i,\n    'unit': unit,\n    'number': number\n  });\n})(Prism);\n/* \"prismjs/components/prism-javascript\" */\n\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n  'class-name': [Prism.languages.clike['class-name'], {\n    pattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:prototype|constructor))/,\n    lookbehind: true\n  }],\n  'keyword': [{\n    pattern: /((?:^|})\\s*)(?:catch|finally)\\b/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|(?:get|set)(?=\\s*[\\[$\\w\\xA0-\\uFFFF])|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n    lookbehind: true\n  }],\n  // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n  'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n  'number': /\\b(?:(?:0[xX](?:[\\dA-Fa-f](?:_[\\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\\d(?:_\\d)?)+n|NaN|Infinity)\\b|(?:\\b(?:\\d(?:_\\d)?)+\\.?(?:\\d(?:_\\d)?)*|\\B\\.(?:\\d(?:_\\d)?)+)(?:[Ee][+-]?(?:\\d(?:_\\d)?)+)?/,\n  'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+/;\nPrism.languages.insertBefore('javascript', 'keyword', {\n  'regex': {\n    pattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyus]{0,6}(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/,\n    lookbehind: true,\n    greedy: true,\n    inside: {\n      'regex-source': {\n        pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n        lookbehind: true,\n        alias: 'language-regex',\n        inside: Prism.languages.regex\n      },\n      'regex-flags': /[a-z]+$/,\n      'regex-delimiter': /^\\/|\\/$/\n    }\n  },\n  // This must be declared before keyword because we use \"function\" inside the look-forward\n  'function-variable': {\n    pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n    alias: 'function'\n  },\n  'parameter': [{\n    pattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }],\n  'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\nPrism.languages.insertBefore('javascript', 'string', {\n  'template-string': {\n    pattern: /`(?:\\\\[\\s\\S]|\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}|(?!\\${)[^\\\\`])*`/,\n    greedy: true,\n    inside: {\n      'template-punctuation': {\n        pattern: /^`|`$/,\n        alias: 'string'\n      },\n      'interpolation': {\n        pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}/,\n        lookbehind: true,\n        inside: {\n          'interpolation-punctuation': {\n            pattern: /^\\${|}$/,\n            alias: 'punctuation'\n          },\n          rest: Prism.languages.javascript\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  }\n});\n\nif (Prism.languages.markup) {\n  Prism.languages.markup.tag.addInlined('script', 'javascript');\n}\n\nPrism.languages.js = Prism.languages.javascript;\n/* \"prismjs/components/prism-jsx\" */\n\n(function (Prism) {\n  var javascript = Prism.util.clone(Prism.languages.javascript);\n  Prism.languages.jsx = Prism.languages.extend('markup', javascript);\n  Prism.languages.jsx.tag.pattern = /<\\/?(?:[\\w.:-]+(?:\\s+(?:[\\w.:$-]+(?:=(?:\"(?:\\\\[^]|[^\\\\\"])*\"|'(?:\\\\[^]|[^\\\\'])*'|[^\\s{'\">=]+|\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])+\\}))?|\\{\\s*\\.{3}\\s*[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\s*\\}))*\\s*\\/?)?>/i;\n  Prism.languages.jsx.tag.inside['tag'].pattern = /^<\\/?[^\\s>\\/]*/i;\n  Prism.languages.jsx.tag.inside['attr-value'].pattern = /=(?!\\{)(?:\"(?:\\\\[^]|[^\\\\\"])*\"|'(?:\\\\[^]|[^\\\\'])*'|[^\\s'\">]+)/i;\n  Prism.languages.jsx.tag.inside['tag'].inside['class-name'] = /^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/;\n  Prism.languages.insertBefore('inside', 'attr-name', {\n    'spread': {\n      pattern: /\\{\\s*\\.{3}\\s*[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\s*\\}/,\n      inside: {\n        'punctuation': /\\.{3}|[{}.]/,\n        'attr-value': /\\w+/\n      }\n    }\n  }, Prism.languages.jsx.tag);\n  Prism.languages.insertBefore('inside', 'attr-value', {\n    'script': {\n      // Allow for two levels of nesting\n      pattern: /=(?:\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])+\\})/i,\n      inside: {\n        'script-punctuation': {\n          pattern: /^=(?={)/,\n          alias: 'punctuation'\n        },\n        rest: Prism.languages.jsx\n      },\n      'alias': 'language-javascript'\n    }\n  }, Prism.languages.jsx.tag); // The following will handle plain text inside tags\n\n  var stringifyToken = function stringifyToken(token) {\n    if (!token) {\n      return '';\n    }\n\n    if (typeof token === 'string') {\n      return token;\n    }\n\n    if (typeof token.content === 'string') {\n      return token.content;\n    }\n\n    return token.content.map(stringifyToken).join('');\n  };\n\n  var walkTokens = function walkTokens(tokens) {\n    var openedTags = [];\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n      var notTagNorBrace = false;\n\n      if (typeof token !== 'string') {\n        if (token.type === 'tag' && token.content[0] && token.content[0].type === 'tag') {\n          // We found a tag, now find its kind\n          if (token.content[0].content[0].content === '</') {\n            // Closing tag\n            if (openedTags.length > 0 && openedTags[openedTags.length - 1].tagName === stringifyToken(token.content[0].content[1])) {\n              // Pop matching opening tag\n              openedTags.pop();\n            }\n          } else {\n            if (token.content[token.content.length - 1].content === '/>') ;else {\n              // Opening tag\n              openedTags.push({\n                tagName: stringifyToken(token.content[0].content[1]),\n                openedBraces: 0\n              });\n            }\n          }\n        } else if (openedTags.length > 0 && token.type === 'punctuation' && token.content === '{') {\n          // Here we might have entered a JSX context inside a tag\n          openedTags[openedTags.length - 1].openedBraces++;\n        } else if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces > 0 && token.type === 'punctuation' && token.content === '}') {\n          // Here we might have left a JSX context inside a tag\n          openedTags[openedTags.length - 1].openedBraces--;\n        } else {\n          notTagNorBrace = true;\n        }\n      }\n\n      if (notTagNorBrace || typeof token === 'string') {\n        if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces === 0) {\n          // Here we are inside a tag, and not inside a JSX context.\n          // That's plain text: drop any tokens matched.\n          var plainText = stringifyToken(token); // And merge text with adjacent text\n\n          if (i < tokens.length - 1 && (typeof tokens[i + 1] === 'string' || tokens[i + 1].type === 'plain-text')) {\n            plainText += stringifyToken(tokens[i + 1]);\n            tokens.splice(i + 1, 1);\n          }\n\n          if (i > 0 && (typeof tokens[i - 1] === 'string' || tokens[i - 1].type === 'plain-text')) {\n            plainText = stringifyToken(tokens[i - 1]) + plainText;\n            tokens.splice(i - 1, 1);\n            i--;\n          }\n\n          tokens[i] = new Prism.Token('plain-text', plainText, null, plainText);\n        }\n      }\n\n      if (token.content && typeof token.content !== 'string') {\n        walkTokens(token.content);\n      }\n    }\n  };\n\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (env.language !== 'jsx' && env.language !== 'tsx') {\n      return;\n    }\n\n    walkTokens(env.tokens);\n  });\n})(Prism);\n/* \"prismjs/components/prism-js-extras\" */\n\n\n(function (Prism) {\n  Prism.languages.insertBefore('javascript', 'function-variable', {\n    'method-variable': {\n      pattern: RegExp('(\\\\.\\\\s*)' + Prism.languages.javascript['function-variable'].pattern.source),\n      lookbehind: true,\n      alias: ['function-variable', 'method', 'function', 'property-access']\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'function', {\n    'method': {\n      pattern: RegExp('(\\\\.\\\\s*)' + Prism.languages.javascript['function'].source),\n      lookbehind: true,\n      alias: ['function', 'property-access']\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'constant', {\n    'known-class-name': [{\n      // standard built-ins\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\n      pattern: /\\b(?:(?:(?:Uint|Int)(?:8|16|32)|Uint8Clamped|Float(?:32|64))?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|(?:Weak)?(?:Set|Map)|WebAssembly)\\b/,\n      alias: 'class-name'\n    }, {\n      // errors\n      pattern: /\\b(?:[A-Z]\\w*)Error\\b/,\n      alias: 'class-name'\n    }]\n  });\n  /**\n   * Replaces the `<ID>` placeholder in the given pattern with a pattern for general JS identifiers.\n   *\n   * @param {string} source\n   * @param {string} [flags]\n   * @returns {RegExp}\n   */\n\n  function withId(source, flags) {\n    return RegExp(source.replace(/<ID>/g, function () {\n      return /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/.source;\n    }), flags);\n  }\n\n  Prism.languages.insertBefore('javascript', 'keyword', {\n    'imports': {\n      // https://tc39.es/ecma262/#sec-imports\n      pattern: withId(/(\\bimport\\b\\s*)(?:<ID>(?:\\s*,\\s*(?:\\*\\s*as\\s+<ID>|\\{[^{}]*\\}))?|\\*\\s*as\\s+<ID>|\\{[^{}]*\\})(?=\\s*\\bfrom\\b)/.source),\n      lookbehind: true,\n      inside: Prism.languages.javascript\n    },\n    'exports': {\n      // https://tc39.es/ecma262/#sec-exports\n      pattern: withId(/(\\bexport\\b\\s*)(?:\\*(?:\\s*as\\s+<ID>)?(?=\\s*\\bfrom\\b)|\\{[^{}]*\\})/.source),\n      lookbehind: true,\n      inside: Prism.languages.javascript\n    }\n  });\n  Prism.languages.javascript['keyword'].unshift({\n    pattern: /\\b(?:as|default|export|from|import)\\b/,\n    alias: 'module'\n  }, {\n    pattern: /\\b(?:await|break|catch|continue|do|else|for|finally|if|return|switch|throw|try|while|yield)\\b/,\n    alias: 'control-flow'\n  }, {\n    pattern: /\\bnull\\b/,\n    alias: ['null', 'nil']\n  }, {\n    pattern: /\\bundefined\\b/,\n    alias: 'nil'\n  });\n  Prism.languages.insertBefore('javascript', 'operator', {\n    'spread': {\n      pattern: /\\.{3}/,\n      alias: 'operator'\n    },\n    'arrow': {\n      pattern: /=>/,\n      alias: 'operator'\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'punctuation', {\n    'property-access': {\n      pattern: withId(/(\\.\\s*)#?<ID>/.source),\n      lookbehind: true\n    },\n    'maybe-class-name': {\n      pattern: /(^|[^$\\w\\xA0-\\uFFFF])[A-Z][$\\w\\xA0-\\uFFFF]+/,\n      lookbehind: true\n    },\n    'dom': {\n      // this contains only a few commonly used DOM variables\n      pattern: /\\b(?:document|location|navigator|performance|(?:local|session)Storage|window)\\b/,\n      alias: 'variable'\n    },\n    'console': {\n      pattern: /\\bconsole(?=\\s*\\.)/,\n      alias: 'class-name'\n    }\n  }); // add 'maybe-class-name' to tokens which might be a class name\n\n  var maybeClassNameTokens = ['function', 'function-variable', 'method', 'method-variable', 'property-access'];\n\n  for (var i = 0; i < maybeClassNameTokens.length; i++) {\n    var token = maybeClassNameTokens[i];\n    var value = Prism.languages.javascript[token]; // convert regex to object\n\n    if (Prism.util.type(value) === 'RegExp') {\n      value = Prism.languages.javascript[token] = {\n        pattern: value\n      };\n    } // keep in mind that we don't support arrays\n\n\n    var inside = value.inside || {};\n    value.inside = inside;\n    inside['maybe-class-name'] = /^[A-Z][\\s\\S]*/;\n  }\n})(Prism);\n/* \"prismjs/components/prism-coffeescript\" */\n\n\n(function (Prism) {\n  // Ignore comments starting with { to privilege string interpolation highlighting\n  var comment = /#(?!\\{).+/,\n      interpolation = {\n    pattern: /#\\{[^}]+\\}/,\n    alias: 'variable'\n  };\n  Prism.languages.coffeescript = Prism.languages.extend('javascript', {\n    'comment': comment,\n    'string': [// Strings are multiline\n    {\n      pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n      greedy: true\n    }, {\n      // Strings are multiline\n      pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation\n      }\n    }],\n    'keyword': /\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\n    'class-member': {\n      pattern: /@(?!\\d)\\w+/,\n      alias: 'variable'\n    }\n  });\n  Prism.languages.insertBefore('coffeescript', 'comment', {\n    'multiline-comment': {\n      pattern: /###[\\s\\S]+?###/,\n      alias: 'comment'\n    },\n    // Block regexp can contain comments and interpolation\n    'block-regex': {\n      pattern: /\\/{3}[\\s\\S]*?\\/{3}/,\n      alias: 'regex',\n      inside: {\n        'comment': comment,\n        'interpolation': interpolation\n      }\n    }\n  });\n  Prism.languages.insertBefore('coffeescript', 'string', {\n    'inline-javascript': {\n      pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n      inside: {\n        'delimiter': {\n          pattern: /^`|`$/,\n          alias: 'punctuation'\n        },\n        'script': {\n          pattern: /[\\s\\S]+/,\n          alias: 'language-javascript',\n          inside: Prism.languages.javascript\n        }\n      }\n    },\n    // Block strings\n    'multiline-string': [{\n      pattern: /'''[\\s\\S]*?'''/,\n      greedy: true,\n      alias: 'string'\n    }, {\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        interpolation: interpolation\n      }\n    }]\n  });\n  Prism.languages.insertBefore('coffeescript', 'keyword', {\n    // Object property\n    'property': /(?!\\d)\\w+(?=\\s*:(?!:))/\n  });\n  delete Prism.languages.coffeescript['template-string'];\n  Prism.languages.coffee = Prism.languages.coffeescript;\n})(Prism);\n/* \"prismjs/components/prism-diff\" */\n\n\n(function (Prism) {\n  Prism.languages.diff = {\n    'coord': [// Match all kinds of coord lines (prefixed by \"+++\", \"---\" or \"***\").\n    /^(?:\\*{3}|-{3}|\\+{3}).*$/m, // Match \"@@ ... @@\" coord lines in unified diff.\n    /^@@.*@@$/m, // Match coord lines in normal diff (starts with a number).\n    /^\\d.*$/m] // deleted, inserted, unchanged, diff\n\n  };\n  /**\n   * A map from the name of a block to its line prefix.\n   *\n   * @type {Object<string, string>}\n   */\n\n  var PREFIXES = {\n    'deleted-sign': '-',\n    'deleted-arrow': '<',\n    'inserted-sign': '+',\n    'inserted-arrow': '>',\n    'unchanged': ' ',\n    'diff': '!'\n  }; // add a token for each prefix\n\n  Object.keys(PREFIXES).forEach(function (name) {\n    var prefix = PREFIXES[name];\n    var alias = [];\n\n    if (!/^\\w+$/.test(name)) {\n      // \"deleted-sign\" -> \"deleted\"\n      alias.push(/\\w+/.exec(name)[0]);\n    }\n\n    if (name === \"diff\") {\n      alias.push(\"bold\");\n    }\n\n    Prism.languages.diff[name] = {\n      pattern: RegExp('^(?:[' + prefix + '].*(?:\\r\\n?|\\n|(?![\\\\s\\\\S])))+', 'm'),\n      alias: alias,\n      inside: {\n        'line': {\n          pattern: /(.)(?=[\\s\\S]).*(?:\\r\\n?|\\n)?/,\n          lookbehind: true\n        },\n        'prefix': {\n          pattern: /[\\s\\S]/,\n          alias: /\\w+/.exec(name)[0]\n        }\n      }\n    };\n  }); // make prefixes available to Diff plugin\n\n  Object.defineProperty(Prism.languages.diff, 'PREFIXES', {\n    value: PREFIXES\n  });\n})(Prism);\n/* \"prismjs/components/prism-git\" */\n\n\nPrism.languages.git = {\n  /*\n   * A simple one line comment like in a git status command\n   * For instance:\n   * $ git status\n   * # On branch infinite-scroll\n   * # Your branch and 'origin/sharedBranches/frontendTeam/infinite-scroll' have diverged,\n   * # and have 1 and 2 different commits each, respectively.\n   * nothing to commit (working directory clean)\n   */\n  'comment': /^#.*/m,\n\n  /*\n   * Regexp to match the changed lines in a git diff output. Check the example below.\n   */\n  'deleted': /^[-–].*/m,\n  'inserted': /^\\+.*/m,\n\n  /*\n   * a string (double and simple quote)\n   */\n  'string': /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/m,\n\n  /*\n   * a git command. It starts with a random prompt finishing by a $, then \"git\" then some other parameters\n   * For instance:\n   * $ git add file.txt\n   */\n  'command': {\n    pattern: /^.*\\$ git .*$/m,\n    inside: {\n      /*\n       * A git command can contain a parameter starting by a single or a double dash followed by a string\n       * For instance:\n       * $ git diff --cached\n       * $ git log -p\n       */\n      'parameter': /\\s--?\\w+/m\n    }\n  },\n\n  /*\n   * Coordinates displayed in a git diff command\n   * For instance:\n   * $ git diff\n   * diff --git file.txt file.txt\n   * index 6214953..1d54a52 100644\n   * --- file.txt\n   * +++ file.txt\n   * @@ -1 +1,2 @@\n   * -Here's my tetx file\n   * +Here's my text file\n   * +And this is the second line\n   */\n  'coord': /^@@.*@@$/m,\n\n  /*\n   * Match a \"commit [SHA1]\" line in a git log output.\n   * For instance:\n   * $ git log\n   * commit a11a14ef7e26f2ca62d4b35eac455ce636d0dc09\n   * Author: lgiraudel\n   * Date:   Mon Feb 17 11:18:34 2014 +0100\n   *\n   *     Add of a new line\n   */\n  'commit-sha1': /^commit \\w{40}$/m\n};\n/* \"prismjs/components/prism-go\" */\n\nPrism.languages.go = Prism.languages.extend('clike', {\n  'string': {\n    pattern: /([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n    greedy: true\n  },\n  'keyword': /\\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\\b/,\n  'boolean': /\\b(?:_|iota|nil|true|false)\\b/,\n  'number': /(?:\\b0x[a-f\\d]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[-+]?\\d+)?)i?/i,\n  'operator': /[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./,\n  'builtin': /\\b(?:bool|byte|complex(?:64|128)|error|float(?:32|64)|rune|string|u?int(?:8|16|32|64)?|uintptr|append|cap|close|complex|copy|delete|imag|len|make|new|panic|print(?:ln)?|real|recover)\\b/\n});\ndelete Prism.languages.go['class-name'];\n/* \"prismjs/components/prism-graphql\" */\n\nPrism.languages.graphql = {\n  'comment': /#.*/,\n  'description': {\n    pattern: /(?:\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")(?=\\s*[a-z_])/i,\n    greedy: true,\n    alias: 'string',\n    inside: {\n      'language-markdown': {\n        pattern: /(^\"(?:\"\")?)(?!\\1)[\\s\\S]+(?=\\1$)/,\n        lookbehind: true,\n        inside: Prism.languages.markdown\n      }\n    }\n  },\n  'string': {\n    pattern: /\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n    greedy: true\n  },\n  'number': /(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n  'boolean': /\\b(?:true|false)\\b/,\n  'variable': /\\$[a-z_]\\w*/i,\n  'directive': {\n    pattern: /@[a-z_]\\w*/i,\n    alias: 'function'\n  },\n  'attr-name': {\n    pattern: /[a-z_]\\w*(?=\\s*(?:\\((?:[^()\"]|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")*\\))?:)/i,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /(\\b(?:enum|implements|interface|on|scalar|type|union)\\s+|&\\s*)[a-zA-Z_]\\w*/,\n    lookbehind: true\n  },\n  'fragment': {\n    pattern: /(\\bfragment\\s+|\\.{3}\\s*(?!on\\b))[a-zA-Z_]\\w*/,\n    lookbehind: true,\n    alias: 'function'\n  },\n  'keyword': /\\b(?:directive|enum|extend|fragment|implements|input|interface|mutation|on|query|repeatable|scalar|schema|subscription|type|union)\\b/,\n  'operator': /[!=|&]|\\.{3}/,\n  'punctuation': /[!(){}\\[\\]:=,]/,\n  'constant': /\\b(?!ID\\b)[A-Z][A-Z_\\d]*\\b/\n};\n/* \"prismjs/components/prism-markup-templating\" */\n\n(function (Prism) {\n  /**\n   * Returns the placeholder for the given language id and index.\n   *\n   * @param {string} language\n   * @param {string|number} index\n   * @returns {string}\n   */\n  function getPlaceholder(language, index) {\n    return '___' + language.toUpperCase() + index + '___';\n  }\n\n  Object.defineProperties(Prism.languages['markup-templating'] = {}, {\n    buildPlaceholders: {\n      /**\n       * Tokenize all inline templating expressions matching `placeholderPattern`.\n       *\n       * If `replaceFilter` is provided, only matches of `placeholderPattern` for which `replaceFilter` returns\n       * `true` will be replaced.\n       *\n       * @param {object} env The environment of the `before-tokenize` hook.\n       * @param {string} language The language id.\n       * @param {RegExp} placeholderPattern The matches of this pattern will be replaced by placeholders.\n       * @param {(match: string) => boolean} [replaceFilter]\n       */\n      value: function value(env, language, placeholderPattern, replaceFilter) {\n        if (env.language !== language) {\n          return;\n        }\n\n        var tokenStack = env.tokenStack = [];\n        env.code = env.code.replace(placeholderPattern, function (match) {\n          if (typeof replaceFilter === 'function' && !replaceFilter(match)) {\n            return match;\n          }\n\n          var i = tokenStack.length;\n          var placeholder; // Check for existing strings\n\n          while (env.code.indexOf(placeholder = getPlaceholder(language, i)) !== -1) {\n            ++i;\n          } // Create a sparse array\n\n\n          tokenStack[i] = match;\n          return placeholder;\n        }); // Switch the grammar to markup\n\n        env.grammar = Prism.languages.markup;\n      }\n    },\n    tokenizePlaceholders: {\n      /**\n       * Replace placeholders with proper tokens after tokenizing.\n       *\n       * @param {object} env The environment of the `after-tokenize` hook.\n       * @param {string} language The language id.\n       */\n      value: function value(env, language) {\n        if (env.language !== language || !env.tokenStack) {\n          return;\n        } // Switch the grammar back\n\n\n        env.grammar = Prism.languages[language];\n        var j = 0;\n        var keys = Object.keys(env.tokenStack);\n\n        function walkTokens(tokens) {\n          for (var i = 0; i < tokens.length; i++) {\n            // all placeholders are replaced already\n            if (j >= keys.length) {\n              break;\n            }\n\n            var token = tokens[i];\n\n            if (typeof token === 'string' || token.content && typeof token.content === 'string') {\n              var k = keys[j];\n              var t = env.tokenStack[k];\n              var s = typeof token === 'string' ? token : token.content;\n              var placeholder = getPlaceholder(language, k);\n              var index = s.indexOf(placeholder);\n\n              if (index > -1) {\n                ++j;\n                var before = s.substring(0, index);\n                var middle = new Prism.Token(language, Prism.tokenize(t, env.grammar), 'language-' + language, t);\n                var after = s.substring(index + placeholder.length);\n                var replacement = [];\n\n                if (before) {\n                  replacement.push.apply(replacement, walkTokens([before]));\n                }\n\n                replacement.push(middle);\n\n                if (after) {\n                  replacement.push.apply(replacement, walkTokens([after]));\n                }\n\n                if (typeof token === 'string') {\n                  tokens.splice.apply(tokens, [i, 1].concat(replacement));\n                } else {\n                  token.content = replacement;\n                }\n              }\n            } else if (token.content\n            /* && typeof token.content !== 'string' */\n            ) {\n                walkTokens(token.content);\n              }\n          }\n\n          return tokens;\n        }\n\n        walkTokens(env.tokens);\n      }\n    }\n  });\n})(Prism);\n/* \"prismjs/components/prism-handlebars\" */\n\n\n(function (Prism) {\n  Prism.languages.handlebars = {\n    'comment': /\\{\\{![\\s\\S]*?\\}\\}/,\n    'delimiter': {\n      pattern: /^\\{\\{\\{?|\\}\\}\\}?$/i,\n      alias: 'punctuation'\n    },\n    'string': /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n    'boolean': /\\b(?:true|false)\\b/,\n    'block': {\n      pattern: /^(\\s*(?:~\\s*)?)[#\\/]\\S+?(?=\\s*(?:~\\s*)?$|\\s)/i,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    'brackets': {\n      pattern: /\\[[^\\]]+\\]/,\n      inside: {\n        punctuation: /\\[|\\]/,\n        variable: /[\\s\\S]+/\n      }\n    },\n    'punctuation': /[!\"#%&':()*+,.\\/;<=>@\\[\\\\\\]^`{|}~]/,\n    'variable': /[^!\"#%&'()*+,\\/;<=>@\\[\\\\\\]^`{|}~\\s]+/\n  };\n  Prism.hooks.add('before-tokenize', function (env) {\n    var handlebarsPattern = /\\{\\{\\{[\\s\\S]+?\\}\\}\\}|\\{\\{[\\s\\S]+?\\}\\}/g;\n    Prism.languages['markup-templating'].buildPlaceholders(env, 'handlebars', handlebarsPattern);\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'handlebars');\n  });\n})(Prism);\n/* \"prismjs/components/prism-json\" */\n// https://www.json.org/json-en.html\n\n\nPrism.languages.json = {\n  'property': {\n    pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n    greedy: true\n  },\n  'string': {\n    pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n    greedy: true\n  },\n  'comment': {\n    pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    greedy: true\n  },\n  'number': /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n  'punctuation': /[{}[\\],]/,\n  'operator': /:/,\n  'boolean': /\\b(?:true|false)\\b/,\n  'null': {\n    pattern: /\\bnull\\b/,\n    alias: 'keyword'\n  }\n};\nPrism.languages.webmanifest = Prism.languages.json;\n/* \"prismjs/components/prism-less\" */\n\n/* FIXME :\n :extend() is not handled specifically : its highlighting is buggy.\n Mixin usage must be inside a ruleset to be highlighted.\n At-rules (e.g. import) containing interpolations are buggy.\n Detached rulesets are highlighted as at-rules.\n A comment before a mixin usage prevents the latter to be properly highlighted.\n */\n\nPrism.languages.less = Prism.languages.extend('css', {\n  'comment': [/\\/\\*[\\s\\S]*?\\*\\//, {\n    pattern: /(^|[^\\\\])\\/\\/.*/,\n    lookbehind: true\n  }],\n  'atrule': {\n    pattern: /@[\\w-](?:\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n    inside: {\n      'punctuation': /[:()]/\n    }\n  },\n  // selectors and mixins are considered the same\n  'selector': {\n    pattern: /(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};@\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n    inside: {\n      // mixin parameters\n      'variable': /@+[\\w-]+/\n    }\n  },\n  'property': /(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/i,\n  'operator': /[+\\-*\\/]/\n});\nPrism.languages.insertBefore('less', 'property', {\n  'variable': [// Variable declaration (the colon must be consumed!)\n  {\n    pattern: /@[\\w-]+\\s*:/,\n    inside: {\n      \"punctuation\": /:/\n    }\n  }, // Variable usage\n  /@@?[\\w-]+/],\n  'mixin-usage': {\n    pattern: /([{;]\\s*)[.#](?!\\d)[\\w-].*?(?=[(;])/,\n    lookbehind: true,\n    alias: 'function'\n  }\n});\n/* \"prismjs/components/prism-makefile\" */\n\nPrism.languages.makefile = {\n  'comment': {\n    pattern: /(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,\n    lookbehind: true\n  },\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  // Built-in target names\n  'builtin': /\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,\n  // Targets\n  'symbol': {\n    pattern: /^(?:[^:=\\s]|[ \\t]+(?![\\s:]))+(?=\\s*:(?!=))/m,\n    inside: {\n      'variable': /\\$+(?:(?!\\$)[^(){}:#=\\s]+|(?=[({]))/\n    }\n  },\n  'variable': /\\$+(?:(?!\\$)[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,\n  'keyword': [// Directives\n  /-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/, // Functions\n  {\n    pattern: /(\\()(?:addsuffix|abspath|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:s|list)?)(?=[ \\t])/,\n    lookbehind: true\n  }],\n  'operator': /(?:::|[?:+!])?=|[|@]/,\n  'punctuation': /[:;(){}]/\n};\n/* \"prismjs/components/prism-markdown\" */\n\n(function (Prism) {\n  // Allow only one line break\n  var inner = /(?:\\\\.|[^\\\\\\n\\r]|(?:\\n|\\r\\n?)(?!\\n|\\r\\n?))/.source;\n  /**\n   * This function is intended for the creation of the bold or italic pattern.\n   *\n   * This also adds a lookbehind group to the given pattern to ensure that the pattern is not backslash-escaped.\n   *\n   * _Note:_ Keep in mind that this adds a capturing group.\n   *\n   * @param {string} pattern\n   * @returns {RegExp}\n   */\n\n  function createInline(pattern) {\n    pattern = pattern.replace(/<inner>/g, function () {\n      return inner;\n    });\n    return RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + '(?:' + pattern + ')');\n  }\n\n  var tableCell = /(?:\\\\.|``(?:[^`\\r\\n]|`(?!`))+``|`[^`\\r\\n]+`|[^\\\\|\\r\\n`])+/.source;\n  var tableRow = /\\|?__(?:\\|__)+\\|?(?:(?:\\n|\\r\\n?)|(?![\\s\\S]))/.source.replace(/__/g, function () {\n    return tableCell;\n  });\n  var tableLine = /\\|?[ \\t]*:?-{3,}:?[ \\t]*(?:\\|[ \\t]*:?-{3,}:?[ \\t]*)+\\|?(?:\\n|\\r\\n?)/.source;\n  Prism.languages.markdown = Prism.languages.extend('markup', {});\n  Prism.languages.insertBefore('markdown', 'prolog', {\n    'front-matter-block': {\n      pattern: /(^(?:\\s*[\\r\\n])?)---(?!.)[\\s\\S]*?[\\r\\n]---(?!.)/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'punctuation': /^---|---$/,\n        'font-matter': {\n          pattern: /\\S+(?:\\s+\\S+)*/,\n          alias: ['yaml', 'language-yaml'],\n          inside: Prism.languages.yaml\n        }\n      }\n    },\n    'blockquote': {\n      // > ...\n      pattern: /^>(?:[\\t ]*>)*/m,\n      alias: 'punctuation'\n    },\n    'table': {\n      pattern: RegExp('^' + tableRow + tableLine + '(?:' + tableRow + ')*', 'm'),\n      inside: {\n        'table-data-rows': {\n          pattern: RegExp('^(' + tableRow + tableLine + ')(?:' + tableRow + ')*$'),\n          lookbehind: true,\n          inside: {\n            'table-data': {\n              pattern: RegExp(tableCell),\n              inside: Prism.languages.markdown\n            },\n            'punctuation': /\\|/\n          }\n        },\n        'table-line': {\n          pattern: RegExp('^(' + tableRow + ')' + tableLine + '$'),\n          lookbehind: true,\n          inside: {\n            'punctuation': /\\||:?-{3,}:?/\n          }\n        },\n        'table-header-row': {\n          pattern: RegExp('^' + tableRow + '$'),\n          inside: {\n            'table-header': {\n              pattern: RegExp(tableCell),\n              alias: 'important',\n              inside: Prism.languages.markdown\n            },\n            'punctuation': /\\|/\n          }\n        }\n      }\n    },\n    'code': [{\n      // Prefixed by 4 spaces or 1 tab and preceded by an empty line\n      pattern: /((?:^|\\n)[ \\t]*\\n|(?:^|\\r\\n?)[ \\t]*\\r\\n?)(?: {4}|\\t).+(?:(?:\\n|\\r\\n?)(?: {4}|\\t).+)*/,\n      lookbehind: true,\n      alias: 'keyword'\n    }, {\n      // `code`\n      // ``code``\n      pattern: /``.+?``|`[^`\\r\\n]+`/,\n      alias: 'keyword'\n    }, {\n      // ```optional language\n      // code block\n      // ```\n      pattern: /^```[\\s\\S]*?^```$/m,\n      greedy: true,\n      inside: {\n        'code-block': {\n          pattern: /^(```.*(?:\\n|\\r\\n?))[\\s\\S]+?(?=(?:\\n|\\r\\n?)^```$)/m,\n          lookbehind: true\n        },\n        'code-language': {\n          pattern: /^(```).+/,\n          lookbehind: true\n        },\n        'punctuation': /```/\n      }\n    }],\n    'title': [{\n      // title 1\n      // =======\n      // title 2\n      // -------\n      pattern: /\\S.*(?:\\n|\\r\\n?)(?:==+|--+)(?=[ \\t]*$)/m,\n      alias: 'important',\n      inside: {\n        punctuation: /==+$|--+$/\n      }\n    }, {\n      // # title 1\n      // ###### title 6\n      pattern: /(^\\s*)#.+/m,\n      lookbehind: true,\n      alias: 'important',\n      inside: {\n        punctuation: /^#+|#+$/\n      }\n    }],\n    'hr': {\n      // ***\n      // ---\n      // * * *\n      // -----------\n      pattern: /(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'list': {\n      // * item\n      // + item\n      // - item\n      // 1. item\n      pattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'url-reference': {\n      // [id]: http://example.com \"Optional title\"\n      // [id]: http://example.com 'Optional title'\n      // [id]: http://example.com (Optional title)\n      // [id]: <http://example.com> \"Optional title\"\n      pattern: /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n      inside: {\n        'variable': {\n          pattern: /^(!?\\[)[^\\]]+/,\n          lookbehind: true\n        },\n        'string': /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\n        'punctuation': /^[\\[\\]!:]|[<>]/\n      },\n      alias: 'url'\n    },\n    'bold': {\n      // **strong**\n      // __strong__\n      // allow one nested instance of italic text using the same delimiter\n      pattern: createInline(/\\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\\b|\\*\\*(?:(?!\\*)<inner>|\\*(?:(?!\\*)<inner>)+\\*)+\\*\\*/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^..)[\\s\\S]+(?=..$)/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'punctuation': /\\*\\*|__/\n      }\n    },\n    'italic': {\n      // *em*\n      // _em_\n      // allow one nested instance of bold text using the same delimiter\n      pattern: createInline(/\\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\\b|\\*(?:(?!\\*)<inner>|\\*\\*(?:(?!\\*)<inner>)+\\*\\*)+\\*/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^.)[\\s\\S]+(?=.$)/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'punctuation': /[*_]/\n      }\n    },\n    'strike': {\n      // ~~strike through~~\n      // ~strike~\n      pattern: createInline(/(~~?)(?:(?!~)<inner>)+?\\2/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^~~?)[\\s\\S]+(?=\\1$)/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'punctuation': /~~?/\n      }\n    },\n    'url': {\n      // [example](http://example.com \"Optional title\")\n      // [example][id]\n      // [example] [id]\n      pattern: createInline(/!?\\[(?:(?!\\])<inner>)+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)|[ \\t]?\\[(?:(?!\\])<inner>)+\\])/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'operator': /^!/,\n        'content': {\n          pattern: /(^\\[)[^\\]]+(?=\\])/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'variable': {\n          pattern: /(^\\][ \\t]?\\[)[^\\]]+(?=\\]$)/,\n          lookbehind: true\n        },\n        'url': {\n          pattern: /(^\\]\\()[^\\s)]+/,\n          lookbehind: true\n        },\n        'string': {\n          pattern: /(^[ \\t]+)\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/,\n          lookbehind: true\n        }\n      }\n    }\n  });\n  ['url', 'bold', 'italic', 'strike'].forEach(function (token) {\n    ['url', 'bold', 'italic', 'strike'].forEach(function (inside) {\n      if (token !== inside) {\n        Prism.languages.markdown[token].inside.content.inside[inside] = Prism.languages.markdown[inside];\n      }\n    });\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (env.language !== 'markdown' && env.language !== 'md') {\n      return;\n    }\n\n    function walkTokens(tokens) {\n      if (!tokens || typeof tokens === 'string') {\n        return;\n      }\n\n      for (var i = 0, l = tokens.length; i < l; i++) {\n        var token = tokens[i];\n\n        if (token.type !== 'code') {\n          walkTokens(token.content);\n          continue;\n        }\n        /*\n         * Add the correct `language-xxxx` class to this code block. Keep in mind that the `code-language` token\n         * is optional. But the grammar is defined so that there is only one case we have to handle:\n         *\n         * token.content = [\n         *     <span class=\"punctuation\">```</span>,\n         *     <span class=\"code-language\">xxxx</span>,\n         *     '\\n', // exactly one new lines (\\r or \\n or \\r\\n)\n         *     <span class=\"code-block\">...</span>,\n         *     '\\n', // exactly one new lines again\n         *     <span class=\"punctuation\">```</span>\n         * ];\n         */\n\n\n        var codeLang = token.content[1];\n        var codeBlock = token.content[3];\n\n        if (codeLang && codeBlock && codeLang.type === 'code-language' && codeBlock.type === 'code-block' && typeof codeLang.content === 'string') {\n          // this might be a language that Prism does not support\n          // do some replacements to support C++, C#, and F#\n          var lang = codeLang.content.replace(/\\b#/g, 'sharp').replace(/\\b\\+\\+/g, 'pp'); // only use the first word\n\n          lang = (/[a-z][\\w-]*/i.exec(lang) || [''])[0].toLowerCase();\n          var alias = 'language-' + lang; // add alias\n\n          if (!codeBlock.alias) {\n            codeBlock.alias = [alias];\n          } else if (typeof codeBlock.alias === 'string') {\n            codeBlock.alias = [codeBlock.alias, alias];\n          } else {\n            codeBlock.alias.push(alias);\n          }\n        }\n      }\n    }\n\n    walkTokens(env.tokens);\n  });\n  Prism.hooks.add('wrap', function (env) {\n    if (env.type !== 'code-block') {\n      return;\n    }\n\n    var codeLang = '';\n\n    for (var i = 0, l = env.classes.length; i < l; i++) {\n      var cls = env.classes[i];\n      var match = /language-(.+)/.exec(cls);\n\n      if (match) {\n        codeLang = match[1];\n        break;\n      }\n    }\n\n    var grammar = Prism.languages[codeLang];\n\n    if (!grammar) {\n      if (codeLang && codeLang !== 'none' && Prism.plugins.autoloader) {\n        var id = 'md-' + new Date().valueOf() + '-' + Math.floor(Math.random() * 1e16);\n        env.attributes['id'] = id;\n        Prism.plugins.autoloader.loadLanguages(codeLang, function () {\n          var ele = document.getElementById(id);\n\n          if (ele) {\n            ele.innerHTML = Prism.highlight(ele.textContent, Prism.languages[codeLang], codeLang);\n          }\n        });\n      }\n    } else {\n      // reverse Prism.util.encode\n      var code = env.content.replace(/&lt;/g, '<').replace(/&amp;/g, '&');\n      env.content = Prism.highlight(code, grammar, codeLang);\n    }\n  });\n  Prism.languages.md = Prism.languages.markdown;\n})(Prism);\n/* \"prismjs/components/prism-objectivec\" */\n\n\nPrism.languages.objectivec = Prism.languages.extend('c', {\n  'string': /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|@\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n  'keyword': /\\b(?:asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while|in|self|super)\\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\\b/,\n  'operator': /-[->]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/@]/\n});\ndelete Prism.languages.objectivec['class-name'];\nPrism.languages.objc = Prism.languages.objectivec;\n/* \"prismjs/components/prism-ocaml\" */\n\nPrism.languages.ocaml = {\n  'comment': /\\(\\*[\\s\\S]*?\\*\\)/,\n  'string': [{\n    pattern: /\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  }, {\n    pattern: /(['`])(?:\\\\(?:\\d+|x[\\da-f]+|.)|(?!\\1)[^\\\\\\r\\n])\\1/i,\n    greedy: true\n  }],\n  'number': /\\b(?:0x[\\da-f][\\da-f_]+|(?:0[bo])?\\d[\\d_]*(?:\\.[\\d_]*)?(?:e[+-]?[\\d_]+)?)/i,\n  'directive': {\n    pattern: /\\B#\\w+/,\n    alias: 'important'\n  },\n  'label': {\n    pattern: /\\B~\\w+/,\n    alias: 'function'\n  },\n  'type-variable': {\n    pattern: /\\B'\\w+/,\n    alias: 'function'\n  },\n  'variant': {\n    pattern: /`\\w+/,\n    alias: 'variable'\n  },\n  'module': {\n    pattern: /\\b[A-Z]\\w+/,\n    alias: 'variable'\n  },\n  // For the list of keywords and operators,\n  // see: http://caml.inria.fr/pub/docs/manual-ocaml/lex.html#sec84\n  'keyword': /\\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|nonrec|object|of|open|private|rec|sig|struct|then|to|try|type|val|value|virtual|when|where|while|with)\\b/,\n  'boolean': /\\b(?:false|true)\\b/,\n  // Custom operators are allowed\n  'operator': /:=|[=<>@^|&+\\-*\\/$%!?~][!$%&*+\\-.\\/:<=>?@^|~]*|\\b(?:and|asr|land|lor|lsl|lsr|lxor|mod|or)\\b/,\n  'punctuation': /[(){}\\[\\]|.,:;]|\\b_\\b/\n};\n/* \"prismjs/components/prism-python\" */\n\nPrism.languages.python = {\n  'comment': {\n    pattern: /(^|[^\\\\])#.*/,\n    lookbehind: true\n  },\n  'string-interpolation': {\n    pattern: /(?:f|rf|fr)(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2)/i,\n    greedy: true,\n    inside: {\n      'interpolation': {\n        // \"{\" <expression> <optional \"!s\", \"!r\", or \"!a\"> <optional \":\" format specifier> \"}\"\n        pattern: /((?:^|[^{])(?:{{)*){(?!{)(?:[^{}]|{(?!{)(?:[^{}]|{(?!{)(?:[^{}])+})+})+}/,\n        lookbehind: true,\n        inside: {\n          'format-spec': {\n            pattern: /(:)[^:(){}]+(?=}$)/,\n            lookbehind: true\n          },\n          'conversion-option': {\n            pattern: /![sra](?=[:}]$)/,\n            alias: 'punctuation'\n          },\n          rest: null\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  },\n  'triple-quoted-string': {\n    pattern: /(?:[rub]|rb|br)?(\"\"\"|''')[\\s\\S]*?\\1/i,\n    greedy: true,\n    alias: 'string'\n  },\n  'string': {\n    pattern: /(?:[rub]|rb|br)?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/i,\n    greedy: true\n  },\n  'function': {\n    pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n    lookbehind: true\n  },\n  'class-name': {\n    pattern: /(\\bclass\\s+)\\w+/i,\n    lookbehind: true\n  },\n  'decorator': {\n    pattern: /(^\\s*)@\\w+(?:\\.\\w+)*/im,\n    lookbehind: true,\n    alias: ['annotation', 'punctuation'],\n    inside: {\n      'punctuation': /\\./\n    }\n  },\n  'keyword': /\\b(?:and|as|assert|async|await|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\b/,\n  'builtin': /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n  'boolean': /\\b(?:True|False|None)\\b/,\n  'number': /(?:\\b(?=\\d)|\\B(?=\\.))(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?j?\\b/i,\n  'operator': /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n  'punctuation': /[{}[\\];(),.:]/\n};\nPrism.languages.python['string-interpolation'].inside['interpolation'].inside.rest = Prism.languages.python;\nPrism.languages.py = Prism.languages.python;\n/* \"prismjs/components/prism-reason\" */\n\nPrism.languages.reason = Prism.languages.extend('clike', {\n  'string': {\n    pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  },\n  // 'class-name' must be matched *after* 'constructor' defined below\n  'class-name': /\\b[A-Z]\\w*/,\n  'keyword': /\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/,\n  'operator': /\\.{3}|:[:=]|\\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:mod|land|lor|lxor|lsl|lsr|asr)\\b/\n});\nPrism.languages.insertBefore('reason', 'class-name', {\n  'character': {\n    pattern: /'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'\\\\\\r\\n])'/,\n    alias: 'string'\n  },\n  'constructor': {\n    // Negative look-ahead prevents from matching things like String.capitalize\n    pattern: /\\b[A-Z]\\w*\\b(?!\\s*\\.)/,\n    alias: 'variable'\n  },\n  'label': {\n    pattern: /\\b[a-z]\\w*(?=::)/,\n    alias: 'symbol'\n  }\n}); // We can't match functions property, so let's not even try.\n\ndelete Prism.languages.reason.function;\n/* \"prismjs/components/prism-sass\" */\n\n(function (Prism) {\n  Prism.languages.sass = Prism.languages.extend('css', {\n    // Sass comments don't need to be closed, only indented\n    'comment': {\n      pattern: /^([ \\t]*)\\/[\\/*].*(?:(?:\\r?\\n|\\r)\\1[ \\t].+)*/m,\n      lookbehind: true\n    }\n  });\n  Prism.languages.insertBefore('sass', 'atrule', {\n    // We want to consume the whole line\n    'atrule-line': {\n      // Includes support for = and + shortcuts\n      pattern: /^(?:[ \\t]*)[@+=].+/m,\n      inside: {\n        'atrule': /(?:@[\\w-]+|[+=])/m\n      }\n    }\n  });\n  delete Prism.languages.sass.atrule;\n  var variable = /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/;\n  var operator = [/[+*\\/%]|[=!]=|<=?|>=?|\\b(?:and|or|not)\\b/, {\n    pattern: /(\\s+)-(?=\\s)/,\n    lookbehind: true\n  }];\n  Prism.languages.insertBefore('sass', 'property', {\n    // We want to consume the whole line\n    'variable-line': {\n      pattern: /^[ \\t]*\\$.+/m,\n      inside: {\n        'punctuation': /:/,\n        'variable': variable,\n        'operator': operator\n      }\n    },\n    // We want to consume the whole line\n    'property-line': {\n      pattern: /^[ \\t]*(?:[^:\\s]+ *:.*|:[^:\\s].*)/m,\n      inside: {\n        'property': [/[^:\\s]+(?=\\s*:)/, {\n          pattern: /(:)[^:\\s]+/,\n          lookbehind: true\n        }],\n        'punctuation': /:/,\n        'variable': variable,\n        'operator': operator,\n        'important': Prism.languages.sass.important\n      }\n    }\n  });\n  delete Prism.languages.sass.property;\n  delete Prism.languages.sass.important; // Now that whole lines for other patterns are consumed,\n  // what's left should be selectors\n\n  Prism.languages.insertBefore('sass', 'punctuation', {\n    'selector': {\n      pattern: /([ \\t]*)\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*(?:,(?:\\r?\\n|\\r)\\1[ \\t]+\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*)*/,\n      lookbehind: true\n    }\n  });\n})(Prism);\n/* \"prismjs/components/prism-scss\" */\n\n\nPrism.languages.scss = Prism.languages.extend('css', {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n    lookbehind: true\n  },\n  'atrule': {\n    pattern: /@[\\w-](?:\\([^()]+\\)|[^()\\s]|\\s+(?!\\s))*?(?=\\s+[{;])/,\n    inside: {\n      'rule': /@[\\w-]+/ // See rest below\n\n    }\n  },\n  // url, compassified\n  'url': /(?:[-a-z]+-)?url(?=\\()/i,\n  // CSS selector regex is not appropriate for Sass\n  // since there can be lot more things (var, @ directive, nesting..)\n  // a selector must start at the end of a property or after a brace (end of other rules or nesting)\n  // it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n  // the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n  // can \"pass\" as a selector- e.g: proper#{$erty})\n  // this one was hard to do, so please be careful if you edit this one :)\n  'selector': {\n    // Initial look-ahead is used to prevent matching of blank selectors\n    pattern: /(?=\\S)[^@;{}()]?(?:[^@;{}()\\s]|\\s+(?!\\s)|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}][^:{}]*[:{][^}]+))/m,\n    inside: {\n      'parent': {\n        pattern: /&/,\n        alias: 'important'\n      },\n      'placeholder': /%[-\\w]+/,\n      'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  },\n  'property': {\n    pattern: /(?:[-\\w]|\\$[-\\w]|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,\n    inside: {\n      'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  }\n});\nPrism.languages.insertBefore('scss', 'atrule', {\n  'keyword': [/@(?:if|else(?: if)?|forward|for|each|while|import|use|extend|debug|warn|mixin|include|function|return|content)\\b/i, {\n    pattern: /( +)(?:from|through)(?= )/,\n    lookbehind: true\n  }]\n});\nPrism.languages.insertBefore('scss', 'important', {\n  // var and interpolated vars\n  'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n});\nPrism.languages.insertBefore('scss', 'function', {\n  'module-modifier': {\n    pattern: /\\b(?:as|with|show|hide)\\b/i,\n    alias: 'keyword'\n  },\n  'placeholder': {\n    pattern: /%[-\\w]+/,\n    alias: 'selector'\n  },\n  'statement': {\n    pattern: /\\B!(?:default|optional)\\b/i,\n    alias: 'keyword'\n  },\n  'boolean': /\\b(?:true|false)\\b/,\n  'null': {\n    pattern: /\\bnull\\b/,\n    alias: 'keyword'\n  },\n  'operator': {\n    pattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|or|not)(?=\\s)/,\n    lookbehind: true\n  }\n});\nPrism.languages.scss['atrule'].inside.rest = Prism.languages.scss;\n/* \"prismjs/components/prism-sql\" */\n\nPrism.languages.sql = {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n    lookbehind: true\n  },\n  'variable': [{\n    pattern: /@([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1/,\n    greedy: true\n  }, /@[\\w.$]+/],\n  'string': {\n    pattern: /(^|[^@\\\\])(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\]|\\2\\2)*\\2/,\n    greedy: true,\n    lookbehind: true\n  },\n  'function': /\\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\\s*\\()/i,\n  // Should we highlight user defined functions too?\n  'keyword': /\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:_INSERT|COL)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURN(?:S|ING)?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\\b/i,\n  'boolean': /\\b(?:TRUE|FALSE|NULL)\\b/i,\n  'number': /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+\\b/i,\n  'operator': /[-+*\\/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|IN|LIKE|NOT|OR|IS|DIV|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,\n  'punctuation': /[;[\\]()`,.]/\n};\n/* \"prismjs/components/prism-stylus\" */\n\n(function (Prism) {\n  var unit = {\n    pattern: /(\\b\\d+)(?:%|[a-z]+)/,\n    lookbehind: true\n  }; // 123 -123 .123 -.123 12.3 -12.3\n\n  var number = {\n    pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n    lookbehind: true\n  };\n  var inside = {\n    'comment': {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true\n    },\n    'url': {\n      pattern: /url\\(([\"']?).*?\\1\\)/i,\n      greedy: true\n    },\n    'string': {\n      pattern: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n      greedy: true\n    },\n    'interpolation': null,\n    // See below\n    'func': null,\n    // See below\n    'important': /\\B!(?:important|optional)\\b/i,\n    'keyword': {\n      pattern: /(^|\\s+)(?:(?:if|else|for|return|unless)(?=\\s+|$)|@[\\w-]+)/,\n      lookbehind: true\n    },\n    'hexcode': /#[\\da-f]{3,6}/i,\n    'color': [/\\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\\b/i, {\n      pattern: /\\b(?:rgb|hsl)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:rgb|hsl)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n      inside: {\n        'unit': unit,\n        'number': number,\n        'function': /[\\w-]+(?=\\()/,\n        'punctuation': /[(),]/\n      }\n    }],\n    'entity': /\\\\[\\da-f]{1,8}/i,\n    'unit': unit,\n    'boolean': /\\b(?:true|false)\\b/,\n    'operator': [// We want non-word chars around \"-\" because it is\n    // accepted in property names.\n    /~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.{2,3}|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/],\n    'number': number,\n    'punctuation': /[{}()\\[\\];:,]/\n  };\n  inside['interpolation'] = {\n    pattern: /\\{[^\\r\\n}:]+\\}/,\n    alias: 'variable',\n    inside: {\n      'delimiter': {\n        pattern: /^{|}$/,\n        alias: 'punctuation'\n      },\n      rest: inside\n    }\n  };\n  inside['func'] = {\n    pattern: /[\\w-]+\\([^)]*\\).*/,\n    inside: {\n      'function': /^[^(]+/,\n      rest: inside\n    }\n  };\n  Prism.languages.stylus = {\n    'atrule-declaration': {\n      pattern: /(^\\s*)@.+/m,\n      lookbehind: true,\n      inside: {\n        'atrule': /^@[\\w-]+/,\n        rest: inside\n      }\n    },\n    'variable-declaration': {\n      pattern: /(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:\\{[^{}]*\\}|\\S.*|$)/m,\n      lookbehind: true,\n      inside: {\n        'variable': /^\\S+/,\n        rest: inside\n      }\n    },\n    'statement': {\n      pattern: /(^[ \\t]*)(?:if|else|for|return|unless)[ \\t].+/m,\n      lookbehind: true,\n      inside: {\n        'keyword': /^\\S+/,\n        rest: inside\n      }\n    },\n    // A property/value pair cannot end with a comma or a brace\n    // It cannot have indented content unless it ended with a semicolon\n    'property-declaration': {\n      pattern: /((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)(?!\\s)[^{\\r\\n]*(?:;|[^{\\r\\n,](?=$)(?!(?:\\r?\\n|\\r)(?:\\{|\\2[ \\t]+)))/m,\n      lookbehind: true,\n      inside: {\n        'property': {\n          pattern: /^[^\\s:]+/,\n          inside: {\n            'interpolation': inside.interpolation\n          }\n        },\n        rest: inside\n      }\n    },\n    // A selector can contain parentheses only as part of a pseudo-element\n    // It can span multiple lines.\n    // It must end with a comma or an accolade or have indented content.\n    'selector': {\n      pattern: /(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t]+)))/m,\n      lookbehind: true,\n      inside: {\n        'interpolation': inside.interpolation,\n        'comment': inside.comment,\n        'punctuation': /[{},]/\n      }\n    },\n    'func': inside.func,\n    'string': inside.string,\n    'comment': {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true,\n      greedy: true\n    },\n    'interpolation': inside.interpolation,\n    'punctuation': /[{}()\\[\\];:.]/\n  };\n})(Prism);\n/* \"prismjs/components/prism-typescript\" */\n\n\n(function (Prism) {\n  Prism.languages.typescript = Prism.languages.extend('javascript', {\n    'class-name': {\n      pattern: /(\\b(?:class|extends|implements|instanceof|interface|new|type)\\s+)(?!keyof\\b)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?:\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,\n      lookbehind: true,\n      greedy: true,\n      inside: null // see below\n\n    },\n    // From JavaScript Prism keyword list and TypeScript language spec: https://github.com/Microsoft/TypeScript/blob/master/doc/spec.md#221-reserved-words\n    'keyword': /\\b(?:abstract|as|asserts|async|await|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|is|keyof|let|module|namespace|new|null|of|package|private|protected|public|readonly|return|require|set|static|super|switch|this|throw|try|type|typeof|undefined|var|void|while|with|yield)\\b/,\n    'builtin': /\\b(?:string|Function|any|number|boolean|Array|symbol|console|Promise|unknown|never)\\b/\n  }); // doesn't work with TS because TS is too complex\n\n  delete Prism.languages.typescript['parameter']; // a version of typescript specifically for highlighting types\n\n  var typeInside = Prism.languages.extend('typescript', {});\n  delete typeInside['class-name'];\n  Prism.languages.typescript['class-name'].inside = typeInside;\n  Prism.languages.insertBefore('typescript', 'function', {\n    'generic-function': {\n      // e.g. foo<T extends \"bar\" | \"baz\">( ...\n      pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\\s*\\()/,\n      greedy: true,\n      inside: {\n        'function': /^#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/,\n        'generic': {\n          pattern: /<[\\s\\S]+/,\n          // everything after the first <\n          alias: 'class-name',\n          inside: typeInside\n        }\n      }\n    }\n  });\n  Prism.languages.ts = Prism.languages.typescript;\n})(Prism);\n/* \"prismjs/components/prism-tsx\" */\n\n\n(function (Prism) {\n  var typescript = Prism.util.clone(Prism.languages.typescript);\n  Prism.languages.tsx = Prism.languages.extend('jsx', typescript); // This will prevent collisions between TSX tags and TS generic types.\n  // Idea by https://github.com/karlhorky\n  // Discussion: https://github.com/PrismJS/prism/issues/2594#issuecomment-710666928\n\n  var tag = Prism.languages.tsx.tag;\n  tag.pattern = RegExp(/(^|[^\\w$]|(?=<\\/))/.source + '(?:' + tag.pattern.source + ')', tag.pattern.flags);\n  tag.lookbehind = true;\n})(Prism);\n/* \"prismjs/components/prism-wasm\" */\n\n\nPrism.languages.wasm = {\n  'comment': [/\\(;[\\s\\S]*?;\\)/, {\n    pattern: /;;.*/,\n    greedy: true\n  }],\n  'string': {\n    pattern: /\"(?:\\\\[\\s\\S]|[^\"\\\\])*\"/,\n    greedy: true\n  },\n  'keyword': [{\n    pattern: /\\b(?:align|offset)=/,\n    inside: {\n      'operator': /=/\n    }\n  }, {\n    pattern: /\\b(?:(?:f32|f64|i32|i64)(?:\\.(?:abs|add|and|ceil|clz|const|convert_[su]\\/i(?:32|64)|copysign|ctz|demote\\/f64|div(?:_[su])?|eqz?|extend_[su]\\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|nearest|neg?|or|popcnt|promote\\/f32|reinterpret\\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|store(?:8|16|32)?|sqrt|sub|trunc(?:_[su]\\/f(?:32|64))?|wrap\\/i64|xor))?|memory\\.(?:grow|size))\\b/,\n    inside: {\n      'punctuation': /\\./\n    }\n  }, /\\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\\b/],\n  'variable': /\\$[\\w!#$%&'*+\\-./:<=>?@\\\\^_`|~]+/i,\n  'number': /[+-]?\\b(?:\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:[eE][+-]?\\d(?:_?\\d)*)?|0x[\\da-fA-F](?:_?[\\da-fA-F])*(?:\\.[\\da-fA-F](?:_?[\\da-fA-D])*)?(?:[pP][+-]?\\d(?:_?\\d)*)?)\\b|\\binf\\b|\\bnan(?::0x[\\da-fA-F](?:_?[\\da-fA-D])*)?\\b/,\n  'punctuation': /[()]/\n};\n/* \"prismjs/components/prism-yaml\" */\n\n(function (Prism) {\n  // https://yaml.org/spec/1.2/spec.html#c-ns-anchor-property\n  // https://yaml.org/spec/1.2/spec.html#c-ns-alias-node\n  var anchorOrAlias = /[*&][^\\s[\\]{},]+/; // https://yaml.org/spec/1.2/spec.html#c-ns-tag-property\n\n  var tag = /!(?:<[\\w\\-%#;/?:@&=+$,.!~*'()[\\]]+>|(?:[a-zA-Z\\d-]*!)?[\\w\\-%#;/?:@&=+$.~*'()]+)?/; // https://yaml.org/spec/1.2/spec.html#c-ns-properties(n,c)\n\n  var properties = '(?:' + tag.source + '(?:[ \\t]+' + anchorOrAlias.source + ')?|' + anchorOrAlias.source + '(?:[ \\t]+' + tag.source + ')?)'; // https://yaml.org/spec/1.2/spec.html#ns-plain(n,c)\n  // This is a simplified version that doesn't support \"#\" and multiline keys\n  // All these long scarry character classes are simplified versions of YAML's characters\n\n  var plainKey = /(?:[^\\s\\x00-\\x08\\x0e-\\x1f!\"#%&'*,\\-:>?@[\\]`{|}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]|[?:-]<PLAIN>)(?:[ \\t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(/<PLAIN>/g, function () {\n    return /[^\\s\\x00-\\x08\\x0e-\\x1f,[\\]{}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]/.source;\n  });\n  var string = /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'/.source;\n  /**\n   *\n   * @param {string} value\n   * @param {string} [flags]\n   * @returns {RegExp}\n   */\n\n  function createValuePattern(value, flags) {\n    flags = (flags || '').replace(/m/g, '') + 'm'; // add m flag\n\n    var pattern = /([:\\-,[{]\\s*(?:\\s<<prop>>[ \\t]+)?)(?:<<value>>)(?=[ \\t]*(?:$|,|]|}|(?:[\\r\\n]\\s*)?#))/.source.replace(/<<prop>>/g, function () {\n      return properties;\n    }).replace(/<<value>>/g, function () {\n      return value;\n    });\n    return RegExp(pattern, flags);\n  }\n\n  Prism.languages.yaml = {\n    'scalar': {\n      pattern: RegExp(/([\\-:]\\s*(?:\\s<<prop>>[ \\t]+)?[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)\\S[^\\r\\n]*(?:\\2[^\\r\\n]+)*)/.source.replace(/<<prop>>/g, function () {\n        return properties;\n      })),\n      lookbehind: true,\n      alias: 'string'\n    },\n    'comment': /#.*/,\n    'key': {\n      pattern: RegExp(/((?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:<<prop>>[ \\t]+)?)<<key>>(?=\\s*:\\s)/.source.replace(/<<prop>>/g, function () {\n        return properties;\n      }).replace(/<<key>>/g, function () {\n        return '(?:' + plainKey + '|' + string + ')';\n      })),\n      lookbehind: true,\n      greedy: true,\n      alias: 'atrule'\n    },\n    'directive': {\n      pattern: /(^[ \\t]*)%.+/m,\n      lookbehind: true,\n      alias: 'important'\n    },\n    'datetime': {\n      pattern: createValuePattern(/\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?(?:[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?))?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?/.source),\n      lookbehind: true,\n      alias: 'number'\n    },\n    'boolean': {\n      pattern: createValuePattern(/true|false/.source, 'i'),\n      lookbehind: true,\n      alias: 'important'\n    },\n    'null': {\n      pattern: createValuePattern(/null|~/.source, 'i'),\n      lookbehind: true,\n      alias: 'important'\n    },\n    'string': {\n      pattern: createValuePattern(string),\n      lookbehind: true,\n      greedy: true\n    },\n    'number': {\n      pattern: createValuePattern(/[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+(?:\\.\\d*)?|\\.?\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)/.source, 'i'),\n      lookbehind: true\n    },\n    'tag': tag,\n    'important': anchorOrAlias,\n    'punctuation': /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n  };\n  Prism.languages.yml = Prism.languages.yaml;\n})(Prism);\n\nexport default Prism;","import Prism from '../prism/index.js';\nexport { default as Prism } from '../prism/index.js';\nimport theme from '../themes/duotoneDark';\nimport { Component } from 'react';\nvar defaultProps = {\n  // $FlowFixMe\n  Prism: Prism,\n  theme: theme\n};\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar newlineRe = /\\r\\n|\\r|\\n/; // Empty lines need to contain a single empty token, denoted with { empty: true }\n\nvar normalizeEmptyLines = function normalizeEmptyLines(line) {\n  if (line.length === 0) {\n    line.push({\n      types: [\"plain\"],\n      content: \"\\n\",\n      empty: true\n    });\n  } else if (line.length === 1 && line[0].content === \"\") {\n    line[0].content = \"\\n\";\n    line[0].empty = true;\n  }\n};\n\nvar appendTypes = function appendTypes(types, add) {\n  var typesSize = types.length;\n\n  if (typesSize > 0 && types[typesSize - 1] === add) {\n    return types;\n  }\n\n  return types.concat(add);\n}; // Takes an array of Prism's tokens and groups them by line, turning plain\n// strings into tokens as well. Tokens can become recursive in some cases,\n// which means that their types are concatenated. Plain-string tokens however\n// are always of type \"plain\".\n// This is not recursive to avoid exceeding the call-stack limit, since it's unclear\n// how nested Prism's tokens can become\n\n\nvar normalizeTokens = function normalizeTokens(tokens) {\n  var typeArrStack = [[]];\n  var tokenArrStack = [tokens];\n  var tokenArrIndexStack = [0];\n  var tokenArrSizeStack = [tokens.length];\n  var i = 0;\n  var stackIndex = 0;\n  var currentLine = [];\n  var acc = [currentLine];\n\n  while (stackIndex > -1) {\n    while ((i = tokenArrIndexStack[stackIndex]++) < tokenArrSizeStack[stackIndex]) {\n      var content = void 0;\n      var types = typeArrStack[stackIndex];\n      var tokenArr = tokenArrStack[stackIndex];\n      var token = tokenArr[i]; // Determine content and append type to types if necessary\n\n      if (typeof token === \"string\") {\n        types = stackIndex > 0 ? types : [\"plain\"];\n        content = token;\n      } else {\n        types = appendTypes(types, token.type);\n\n        if (token.alias) {\n          types = appendTypes(types, token.alias);\n        }\n\n        content = token.content;\n      } // If token.content is an array, increase the stack depth and repeat this while-loop\n\n\n      if (typeof content !== \"string\") {\n        stackIndex++;\n        typeArrStack.push(types);\n        tokenArrStack.push(content);\n        tokenArrIndexStack.push(0);\n        tokenArrSizeStack.push(content.length);\n        continue;\n      } // Split by newlines\n\n\n      var splitByNewlines = content.split(newlineRe);\n      var newlineCount = splitByNewlines.length;\n      currentLine.push({\n        types: types,\n        content: splitByNewlines[0]\n      }); // Create a new line for each string on a new line\n\n      for (var i$1 = 1; i$1 < newlineCount; i$1++) {\n        normalizeEmptyLines(currentLine);\n        acc.push(currentLine = []);\n        currentLine.push({\n          types: types,\n          content: splitByNewlines[i$1]\n        });\n      }\n    } // Decreate the stack depth\n\n\n    stackIndex--;\n    typeArrStack.pop();\n    tokenArrStack.pop();\n    tokenArrIndexStack.pop();\n    tokenArrSizeStack.pop();\n  }\n\n  normalizeEmptyLines(currentLine);\n  return acc;\n};\n\nvar themeToDict = function themeToDict(theme, language) {\n  var plain = theme.plain; // $FlowFixMe\n\n  var base = Object.create(null);\n  var themeDict = theme.styles.reduce(function (acc, themeEntry) {\n    var languages = themeEntry.languages;\n    var style = themeEntry.style;\n\n    if (languages && !languages.includes(language)) {\n      return acc;\n    }\n\n    themeEntry.types.forEach(function (type) {\n      // $FlowFixMe\n      var accStyle = _extends({}, acc[type], style);\n\n      acc[type] = accStyle;\n    });\n    return acc;\n  }, base); // $FlowFixMe\n\n  themeDict.root = plain; // $FlowFixMe\n\n  themeDict.plain = _extends({}, plain, {\n    backgroundColor: null\n  });\n  return themeDict;\n};\n\nfunction objectWithoutProperties(obj, exclude) {\n  var target = {};\n\n  for (var k in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, k) && exclude.indexOf(k) === -1) target[k] = obj[k];\n  }\n\n  return target;\n}\n\nvar Highlight = /*@__PURE__*/function (Component) {\n  function Highlight() {\n    var this$1 = this;\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    Component.apply(this, args);\n\n    _defineProperty(this, \"getThemeDict\", function (props) {\n      if (this$1.themeDict !== undefined && props.theme === this$1.prevTheme && props.language === this$1.prevLanguage) {\n        return this$1.themeDict;\n      }\n\n      this$1.prevTheme = props.theme;\n      this$1.prevLanguage = props.language;\n      var themeDict = props.theme ? themeToDict(props.theme, props.language) : undefined;\n      return this$1.themeDict = themeDict;\n    });\n\n    _defineProperty(this, \"getLineProps\", function (ref) {\n      var key = ref.key;\n      var className = ref.className;\n      var style = ref.style;\n      var rest$1 = objectWithoutProperties(ref, [\"key\", \"className\", \"style\", \"line\"]);\n      var rest = rest$1;\n\n      var output = _extends({}, rest, {\n        className: \"token-line\",\n        style: undefined,\n        key: undefined\n      });\n\n      var themeDict = this$1.getThemeDict(this$1.props);\n\n      if (themeDict !== undefined) {\n        output.style = themeDict.plain;\n      }\n\n      if (style !== undefined) {\n        output.style = output.style !== undefined ? _extends({}, output.style, style) : style;\n      }\n\n      if (key !== undefined) {\n        output.key = key;\n      }\n\n      if (className) {\n        output.className += \" \" + className;\n      }\n\n      return output;\n    });\n\n    _defineProperty(this, \"getStyleForToken\", function (ref) {\n      var types = ref.types;\n      var empty = ref.empty;\n      var typesSize = types.length;\n      var themeDict = this$1.getThemeDict(this$1.props);\n\n      if (themeDict === undefined) {\n        return undefined;\n      } else if (typesSize === 1 && types[0] === \"plain\") {\n        return empty ? {\n          display: \"inline-block\"\n        } : undefined;\n      } else if (typesSize === 1 && !empty) {\n        return themeDict[types[0]];\n      }\n\n      var baseStyle = empty ? {\n        display: \"inline-block\"\n      } : {}; // $FlowFixMe\n\n      var typeStyles = types.map(function (type) {\n        return themeDict[type];\n      });\n      return Object.assign.apply(Object, [baseStyle].concat(typeStyles));\n    });\n\n    _defineProperty(this, \"getTokenProps\", function (ref) {\n      var key = ref.key;\n      var className = ref.className;\n      var style = ref.style;\n      var token = ref.token;\n      var rest$1 = objectWithoutProperties(ref, [\"key\", \"className\", \"style\", \"token\"]);\n      var rest = rest$1;\n\n      var output = _extends({}, rest, {\n        className: \"token \" + token.types.join(\" \"),\n        children: token.content,\n        style: this$1.getStyleForToken(token),\n        key: undefined\n      });\n\n      if (style !== undefined) {\n        output.style = output.style !== undefined ? _extends({}, output.style, style) : style;\n      }\n\n      if (key !== undefined) {\n        output.key = key;\n      }\n\n      if (className) {\n        output.className += \" \" + className;\n      }\n\n      return output;\n    });\n\n    _defineProperty(this, \"tokenize\", function (Prism, code, grammar, language) {\n      var env = {\n        code: code,\n        grammar: grammar,\n        language: language,\n        tokens: []\n      };\n      Prism.hooks.run(\"before-tokenize\", env);\n      var tokens = env.tokens = Prism.tokenize(env.code, env.grammar, env.language);\n      Prism.hooks.run(\"after-tokenize\", env);\n      return tokens;\n    });\n  }\n\n  if (Component) Highlight.__proto__ = Component;\n  Highlight.prototype = Object.create(Component && Component.prototype);\n  Highlight.prototype.constructor = Highlight;\n\n  Highlight.prototype.render = function render() {\n    var ref = this.props;\n    var Prism = ref.Prism;\n    var language = ref.language;\n    var code = ref.code;\n    var children = ref.children;\n    var themeDict = this.getThemeDict(this.props);\n    var grammar = Prism.languages[language];\n    var mixedTokens = grammar !== undefined ? this.tokenize(Prism, code, grammar, language) : [code];\n    var tokens = normalizeTokens(mixedTokens);\n    return children({\n      tokens: tokens,\n      className: \"prism-code language-\" + language,\n      style: themeDict !== undefined ? themeDict.root : {},\n      getLineProps: this.getLineProps,\n      getTokenProps: this.getTokenProps\n    });\n  };\n\n  return Highlight;\n}(Component);\n\nexport default Highlight;\nexport { defaultProps };","// Duotone Dark\n// Author: Simurai, adapted from DuoTone themes for Atom (http://simurai.com/projects/2016/01/01/duotone-themes)\n// Conversion: Bram de Haan (http://atelierbram.github.io/Base2Tone-prism/output/prism/prism-base2tone-evening-dark.css)\n// Generated with Base16 Builder (https://github.com/base16-builder/base16-builder)\nvar theme = {\n  plain: {\n    backgroundColor: \"#2a2734\",\n    color: \"#9a86fd\"\n  },\n  styles: [{\n    types: [\"comment\", \"prolog\", \"doctype\", \"cdata\", \"punctuation\"],\n    style: {\n      color: \"#6c6783\"\n    }\n  }, {\n    types: [\"namespace\"],\n    style: {\n      opacity: 0.7\n    }\n  }, {\n    types: [\"tag\", \"operator\", \"number\"],\n    style: {\n      color: \"#e09142\"\n    }\n  }, {\n    types: [\"property\", \"function\"],\n    style: {\n      color: \"#9a86fd\"\n    }\n  }, {\n    types: [\"tag-id\", \"selector\", \"atrule-id\"],\n    style: {\n      color: \"#eeebff\"\n    }\n  }, {\n    types: [\"attr-name\"],\n    style: {\n      color: \"#c4b9fe\"\n    }\n  }, {\n    types: [\"boolean\", \"string\", \"entity\", \"url\", \"attr-value\", \"keyword\", \"control\", \"directive\", \"unit\", \"statement\", \"regex\", \"at-rule\", \"placeholder\", \"variable\"],\n    style: {\n      color: \"#ffcc99\"\n    }\n  }, {\n    types: [\"deleted\"],\n    style: {\n      textDecorationLine: \"line-through\"\n    }\n  }, {\n    types: [\"inserted\"],\n    style: {\n      textDecorationLine: \"underline\"\n    }\n  }, {\n    types: [\"italic\"],\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"important\", \"bold\"],\n    style: {\n      fontWeight: \"bold\"\n    }\n  }, {\n    types: [\"important\"],\n    style: {\n      color: \"#c4b9fe\"\n    }\n  }]\n};\nexport default theme;","/* eslint-disable */\n\nimport React from 'react';\nimport { MDXProvider } from '@mdx-js/react';\nimport Highlight, { defaultProps } from 'prism-react-renderer';\n\nconst Prism = require(\"prismjs\");\n\n(typeof global !== \"undefined\" ? global : window).Prism = Prism;\n\nrequire(\"prismjs/components/prism-haskell\");\nrequire(\"./idris.js\");\n\nconst theme = {\n  plain: {\n    color: \"#F8F8F2\",\n    backgroundColor: \"rgb(16 16 16)\"\n  },\n  styles: [{\n    types: [\"prolog\", \"constant\", \"builtin\"],\n    style: {\n      color: \"rgb(113 203 255)\"\n    }\n  }, {\n    types: [\"inserted\", \"function\"],\n    style: {\n      color: \"rgb(80, 250, 123)\"\n    }\n  }, {\n    types: [\"deleted\"],\n    style: {\n      color: \"rgb(255, 85, 85)\"\n    }\n  }, {\n    types: [\"changed\"],\n    style: {\n      color: \"rgb(255, 184, 108)\"\n    }\n  }, {\n    types: [\"punctuation\", \"symbol\"],\n    style: {\n      color: \"rgb(248, 248, 242)\"\n    }\n  }, {\n    types: [\"string\", \"char\", \"tag\", \"selector\"],\n    style: {\n      color: \"rgb(255, 121, 198)\"\n    }\n  }, {\n    types: [\"keyword\", \"variable\"],\n    style: {\n      color: \"rgb(189, 147, 249)\",\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"comment\"],\n    style: {\n      color: \"rgb(49 49 49)\"\n    }\n  }, {\n    types: [\"attr-name\"],\n    style: {\n      color: \"rgb(241, 250, 140)\"\n    }\n  }]\n};\n\n\n// It will replace the \"pre\" with another component that will get\n// The language from the className\n\nconst HighlightPre = ({ children }) => {\n  const className = children.props.className || '';\n  const matches = className.match(/language-(?<lang>.*)/);\n  return (\n    <Highlight\n      {...defaultProps}\n      theme={theme}\n      code={children.props.children.trim()}\n      Prism={Prism}\n      language={\n        matches && matches.groups && matches.groups.lang\n          ? matches.groups.lang\n          : ''\n      }\n    >\n      {({ className, style, tokens, getLineProps, getTokenProps }) => (\n        <pre className={className} style={style}>\n          {tokens.map((line, i) => (\n            <div {...getLineProps({ line, key: i })}>\n              {line.map((token, key) => (\n                <span {...getTokenProps({ token, key })} />\n              ))}\n            </div>\n          ))}\n        </pre>\n      )}\n    </Highlight>\n  );\n};\n\nconst Component = {\n  pre: HighlightPre,\n};\n\nexport const WrapProvider = ({ element }) => {\n  return <MDXProvider components={Component}>{element}</MDXProvider>;\n};\n","/* eslint-disable react/prop-types */\n\nimport { MDXRenderer } from 'gatsby-plugin-mdx';\nimport { graphql } from 'gatsby';\nimport React from 'react';\n\nimport Navbar from '../components/Navbar';\nimport { GlobalStyle } from '../components/styles';\nimport Seo from '../components/seo';\n\nimport { Wrapper, MarkdownTheme, Title } from './styles';\nimport { WrapProvider } from './highlight';\n\nconst theme = {\n  background: '#181818',\n  mobileBackground: '#131313',\n  shadow: '20px rgba(0, 0, 0, 0.05)',\n  fontColor: '#bbb',\n};\n\nconst Post = ({ data }) => (\n  <>\n    <Seo title={data.mdx.frontmatter.title} />\n    <GlobalStyle />\n    <div style={{ marginBottom: '100px' }}>\n      <Navbar theme={theme} />\n      <Wrapper>\n        <Title>{data.mdx.frontmatter.title}</Title>\n        <MarkdownTheme>\n          <WrapProvider element={\n            <MDXRenderer>{data.mdx.body}</MDXRenderer>\n          }\n          />\n        </MarkdownTheme>\n      </Wrapper>\n    </div>\n  </>\n);\n\nexport const query = graphql`\n  query Post($slug: String!) {\n    mdx(slug: { eq: $slug }) {\n      body\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n\nexport default Post;\n","/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","const React = require(`react`)\nconst { mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  children,\n  ...props\n}) {\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, {...props })\n}\n","/* eslint-disable no-undef */\nPrism.languages.idris = Prism.languages.extend('haskell', {\n  comment: {\n    pattern: /(?:(?:--|\\|\\|\\|).*$|\\{-[\\s\\S]*?-\\})/m,\n  },\n  keyword: /\\b(?:Type|case|class|codata|constructor|corecord|data|do|dsl|else|export|if|implementation|implicit|import|impossible|in|infix|infixl|infixr|instance|interface|let|module|mutual|namespace|of|parameters|partial|postulate|private|proof|public|quoteGoal|record|rewrite|syntax|then|total|using|where|with)\\b/,\n  'import-statement': {\n    pattern: /(^\\s*)import\\s+(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*/m,\n    lookbehind: true,\n  },\n  builtin: undefined,\n});\n\nPrism.languages.idr = Prism.languages.idris;\n"],"sourceRoot":""}